{"version":3,"sources":["UserPool.js","reducers/CommonReducer.js","reducers/AgentReducer.js","reducers/DashboardReducer.js","reducers/InsuranceTypeVendorReducer.js","store.js","Account.js","Login/Login.jsx","Signup/Signup.jsx","Navbar/Navbar.jsx","Agent/EditAgent/EditAgent.jsx","Admin/AdminSidebar/AdminSidebar.jsx","Admin/AdminDashboard/GraphInsuranceType/GraphInsuranceType.jsx","Admin/AdminDashboard/GraphVendor/GraphVendor.jsx","Admin/AdminDashboard/GraphAgent/GraphAgent.jsx","Admin/AdminDashboard/AdminDashboard.jsx","Admin/AddAgent/AddAgent.jsx","Admin/AgentList/AgentList.jsx","Admin/Admin.jsx","App.js","reportWebVitals.js","index.js"],"names":["CognitoUserPool","UserPoolId","ClientId","commonSlice","createSlice","name","initialState","loading","loginState","reducers","changeLoadingState","state","action","payload","changeLoginState","extraReducers","actions","getAllAgents","createAsyncThunk","a","axios","get","headers","sessionStorage","getItem","response","console","log","obj","status","list","data","getAgentByEmail","email","editAgent","put","addNewAgent","post","loadAgentsFromHR","fetchLicenseInformation","deleteAgent","delete","agentSlice","agentList","agentByEmail","pending","fulfilled","rejected","fetchDataByInsuranceType","fetchDataByVendor","insuranceTypeId","fetchDataForAgents","URL","dashboardSlice","dataByInsuranceType","dataByVendor","dataByAgent","fetchInsurancePolicyTypes","insuranceTypeVendorSlice","insuranceType","configureStore","reducer","common","commonReducer","agent","agentReducer","dashboard","dashboardReducer","insuranceTypeVendor","insuranceTypeVendorReducer","AccountContext","createContext","Account","props","getSession","Promise","resolve","reject","user","Pool","getCurrentUser","err","session","authenticate","Username","Password","CognitoUser","authDetails","AuthenticationDetails","authenticateUser","onSuccess","onFailure","newPasswordRequired","Provider","value","logout","signOut","store","dispatch","children","Login","history","useHistory","useDispatch","useState","setEmail","password","setPassword","useContext","errorToShow","setErrorToShow","className","type","onChange","event","target","placeholder","onClick","then","setItem","accessToken","jwtToken","idToken","push","catch","Alert","variant","SignUp","UserPool","signUp","Name","Value","to","Navbar","useSelector","isUserLoggedIn","setIsUserLoggedIn","useEffect","style","backgroundColor","href","src","alt","height","id","Dropdown","Toggle","Menu","Item","EditAgent","useParams","setUserId","email1","setEmail1","setName","address","setAddress","dob","setDob","crmId","setCrmId","teleCallingId","setTeleCallingId","licenseUrnNo","setLicenseUrnNo","licenseIssueDate","setLicenseIssueDate","licenseExpiryDate","setLicenseExpiryDate","isEditable","setisEditable","Object","keys","length","userId","Date","icon","faPencilAlt","Form","Group","as","Row","controlId","Label","column","sm","Col","Control","required","disabled","toISOString","split","Button","valueOf","AdminSidebar","handleClick","url","GraphInsuranceType","dataByInsuranceType1","setDataByInsuranceType1","text","position","field","categoryField","labels","visible","content","dataItem","insuranceTypeName","totalCount","GraphVendor","dataByVendor1","setDataByVendor1","tooltip","vendorName","map","item","GraphAgent","dataByAgent1","setDataByAgent1","setInsuranceType","setVendorId","insuranceTypeObj","JSON","parse","handleChangeInsuranceType","stringify","vendorId","handleChangeVendor","listOfVendors","AdminDashboard","AddAgent","setIsSubmitButtonClicked","Spinner","animation","role","DetailComponent","toDateString","slice","AgentList","setData","justifyContent","size","detail","width","reorderable","resizable","rowHeight","expandField","onExpandChange","newData","expanded","title","headerClassName","cell","todaysDate","lExpiryDate","faTrash","Admin","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48ebe9b7.chunk.js","sourcesContent":["import { CognitoUserPool }  from 'amazon-cognito-identity-js';\nconst poolData = {\n    UserPoolId: 'us-east-2_ULwbZAKdb',\n    ClientId: '3bhqdd5d65jcki32h68soq46td'\n}\n\nexport default new CognitoUserPool(poolData);","// import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n// import axios from \"axios\";\n\nconst commonSlice = createSlice({\n    name: \"common\",\n    initialState: {\n        loading: false,\n        loginState: false\n    },\n    reducers: {\n        changeLoadingState(state, action) {\n            state.loading = action.payload\n        },\n        changeLoginState(state, action) {\n            state.loginState = action.payload\n        }\n\n    },\n    extraReducers: {\n    },\n});\n\nexport const { changeLoadingState, changeLoginState } = commonSlice.actions;\n\nexport default commonSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const getAllAgents = createAsyncThunk(\"agents/getAllAgents\", async () => {\n    try {\n        const response = await axios.get(`https://gjkl2w4at2.execute-api.us-east-2.amazonaws.com/dev/agents`, {\n            headers: {\n                'Authorization': sessionStorage.getItem('idtoken')\n            }\n        });\n        console.log('get all agent api response:- ', response)\n        let obj = {\n            status: 200, list: response.data\n        }\n        return obj;\n    } catch (err) {\n        console.log(err.response.data);\n        let obj = {\n            status: 500, ...err.response.data\n        }\n        return obj;\n    }\n});\n\nexport const getAgentByEmail = createAsyncThunk(\"agents/getAgentByEmail\", async (email) => {\n    try {\n        const response = await axios.get(`https://gjkl2w4at2.execute-api.us-east-2.amazonaws.com/dev/agent?email=${email}`, {\n            headers: {\n                'Authorization': sessionStorage.getItem('idtoken')\n            }\n        });\n        console.log('getAgentByEmail api response:- ', response)\n        let obj = {\n            status: 200, data: response.data\n        }\n        return obj;\n    } catch (err) {\n        console.log(err.response.data);\n        let obj = {\n            status: 500, ...err.response.data\n        }\n        return obj;\n    }\n});\n\nexport const editAgent = createAsyncThunk(\"agents/editAgent\", async (data) => {\n    try {\n        const response = await axios.put(`https://gjkl2w4at2.execute-api.us-east-2.amazonaws.com/dev/agent`, data, { headers: { 'Content-Type': 'application/json', 'Authorization': sessionStorage.getItem('idtoken') } });\n        console.log('editAgent api response:- ', response)\n        let obj = {\n            status: 200, data: response.data\n        }\n        return obj;\n    } catch (err) {\n        console.log(err.response.data);\n        let obj = {\n            status: 500, ...err.response.data\n        }\n        return obj;\n    }\n});\n\nexport const addNewAgent = createAsyncThunk(\"agents/addNewAgent\", async (data) => {\n    try {\n        const response = await axios.post(`https://gjkl2w4at2.execute-api.us-east-2.amazonaws.com/dev/agent`, data, { headers: { 'Content-Type': 'application/json', 'Authorization': sessionStorage.getItem('idtoken') } });\n        console.log('addNewAgent api response:- ', response)\n        let obj = {\n            status: 200, data: response.data\n        }\n        return obj;\n    } catch (err) {\n        console.log(err.response.data);\n        let obj = {\n            status: 500, ...err.response.data\n        }\n        return obj;\n    }\n});\n\n\n\nexport const loadAgentsFromHR = createAsyncThunk(\"agents/loadAgentsFromHR\", async () => {\n    try {\n        const response = await axios.get(`https://gjkl2w4at2.execute-api.us-east-2.amazonaws.com/dev/agents/fetchfromhrms`, {\n            headers: {\n                'Authorization': sessionStorage.getItem('idtoken')\n            }\n        });\n        console.log('loadAgentsFromHR api response:- ', response)\n        let obj = {\n            status: 200, list: response.data\n        }\n        return obj;\n    } catch (err) {\n        console.log(err.response.data);\n        let obj = {\n            status: 500, ...err.response.data\n        }\n        return obj;\n    }\n});\n\n\nexport const fetchLicenseInformation = createAsyncThunk(\"agents/fetchLicenseInformation\", async () => {\n    try {\n        const response = await axios.get(`https://gjkl2w4at2.execute-api.us-east-2.amazonaws.com/dev/agents/updatelicenseinformation`, {\n            headers: {\n                'Authorization': sessionStorage.getItem('idtoken')\n            }\n        });\n        console.log('fetchLicenseInformation api response:- ', response)\n        let obj = {\n            status: 200, list: response.data\n        }\n        return obj;\n    } catch (err) {\n        console.log(err.response.data);\n        let obj = {\n            status: 500, ...err.response.data\n        }\n        return obj;\n    }\n});\n\nexport const deleteAgent = createAsyncThunk(\"agents/deleteAgent\", async (email) => {\n    try {\n        const response = await axios.delete(`https://gjkl2w4at2.execute-api.us-east-2.amazonaws.com/dev/agent?email=${email}`, {\n            headers: {\n                'Authorization': sessionStorage.getItem('idtoken')\n            }\n        });\n        console.log('deleteAgent api response:- ', response)\n        let obj = {\n            status: 200, list: response.data\n        }\n        return obj;\n    } catch (err) {\n        console.log(err.response.data);\n        let obj = {\n            status: 500, ...err.response.data\n        }\n        return obj;\n    }\n});\n\nconst agentSlice = createSlice({\n    name: \"agent\",\n    initialState: {\n        loading: false,\n        agentList: [],\n        agentByEmail: {}\n    },\n    reducers: {\n    },\n    extraReducers: {\n        [getAllAgents.pending]: (state, action) => {\n            state.loading = true;\n        },\n        [getAllAgents.fulfilled]: (state, action) => {\n            state.loading = false;\n            if (action.payload.status == 200) {\n\n                console.log(action.payload);\n                state.agentList = [...action.payload.list];\n            }\n\n        },\n        [getAllAgents.rejected]: (state, action) => {\n            state.loading = false;\n        },\n\n        [getAgentByEmail.pending]: (state, action) => {\n            state.loading = true;\n        },\n        [getAgentByEmail.fulfilled]: (state, action) => {\n            state.loading = false;\n            if (action.payload.status == 200) {\n                state.agentByEmail = action.payload.data;\n            }\n\n        },\n        [getAgentByEmail.rejected]: (state, action) => {\n            state.loading = false;\n        },\n\n        [editAgent.pending]: (state, action) => {\n            state.loading = true;\n        },\n        [editAgent.fulfilled]: (state, action) => {\n            state.loading = false;\n        },\n        [editAgent.rejected]: (state, action) => {\n            state.loading = false;\n        },\n        [addNewAgent.pending]: (state, action) => {\n            state.loading = true;\n        },\n        [addNewAgent.fulfilled]: (state, action) => {\n            state.loading = false;\n        },\n        [addNewAgent.rejected]: (state, action) => {\n            state.loading = false;\n        },\n\n        [loadAgentsFromHR.pending]: (state, action) => {\n            state.loading = true;\n        },\n        [loadAgentsFromHR.fulfilled]: (state, action) => {\n            state.loading = false;\n        },\n        [loadAgentsFromHR.rejected]: (state, action) => {\n            state.loading = false;\n        },\n        [fetchLicenseInformation.pending]: (state, action) => {\n            state.loading = true;\n        },\n        [fetchLicenseInformation.fulfilled]: (state, action) => {\n            state.loading = false;\n        },\n        [fetchLicenseInformation.rejected]: (state, action) => {\n            state.loading = false;\n        },\n\n        [deleteAgent.pending]: (state, action) => {\n            state.loading = true;\n        },\n        [deleteAgent.fulfilled]: (state, action) => {\n            state.loading = false;\n        },\n        [deleteAgent.rejected]: (state, action) => {\n            state.loading = false;\n        },\n    },\n});\n\n// export const { setUserDetailsFromSS, logoutTheUser } = agentSlice.actions;\n\nexport default agentSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const fetchDataByInsuranceType = createAsyncThunk(\"dashboard/fetchDataByInsuranceType\", async () => {\n    try {\n        const response = await axios.get(`https://gjkl2w4at2.execute-api.us-east-2.amazonaws.com/dev/stats/insurance-type`, {\n            headers: {\n                'Authorization': sessionStorage.getItem('idtoken')\n            }\n        });\n        if (response.status > 299) {\n            console.log('fetchDataByInsuranceType api response:- ', response)\n            let obj = {\n                status: 500, data: response.data\n            }\n            return obj;\n        } else {\n            console.log('fetchDataByInsuranceType api response:- ', response)\n            let obj = {\n                status: 200, data: response.data\n            }\n            return obj;\n        }\n\n\n    } catch (err) {\n        console.log(err.response.data);\n        let obj = {\n            status: 500, ...err.response.data\n        }\n        return obj;\n    }\n});\n\nexport const fetchDataByVendor = createAsyncThunk(\"dashboard/fetchDataByVendor\", async (insuranceTypeId) => {\n    try {\n        const response = await axios.get(`https://gjkl2w4at2.execute-api.us-east-2.amazonaws.com/dev/stats/vendor?insuranceTypeId=${insuranceTypeId}`, {\n            headers: {\n                'Authorization': sessionStorage.getItem('idtoken')\n            }\n        });\n        if (response.status > 299) {\n            console.log('fetchDataByVendor api response:- ', response)\n            let obj = {\n                status: 500, data: response.data\n            }\n            return obj;\n        } else {\n            console.log('fetchDataByVendor api response:- ', response)\n            let obj = {\n                status: 200, data: response.data\n            }\n            return obj;\n        }\n\n\n    } catch (err) {\n        console.log(err.response.data);\n        let obj = {\n            status: 500, ...err.response.data\n        }\n        return obj;\n    }\n});\n\n\nexport const fetchDataForAgents = createAsyncThunk(\"dashboard/fetchDataForAgents\", async (obj) => {\n    try {\n        let URL = \"https://gjkl2w4at2.execute-api.us-east-2.amazonaws.com/dev/stats/agent\";\n        if (obj && obj['insuranceTypeId']) {\n            URL = URL + \"?insuranceTypeId=\" + obj['insuranceTypeId'];\n        }\n        if (obj && obj['vendorId']) {\n            URL = URL + \"&vendorId=\" + obj['vendorId'];\n        }\n        const response = await axios.get(URL, {\n            headers: {\n                'Authorization': sessionStorage.getItem('idtoken')\n            }\n        });\n        if (response.status > 299) {\n            console.log('fetchDataForAgents api response:- ', response)\n            let obj = {\n                status: 500, data: response.data\n            }\n            return obj;\n        } else {\n            console.log('fetchDataForAgents api response:- ', response)\n            let obj = {\n                status: 200, data: response.data\n            }\n            return obj;\n        }\n\n\n    } catch (err) {\n        console.log(err.response.data);\n        let obj = {\n            status: 500, ...err.response.data\n        }\n        return obj;\n    }\n});\n\n\n\nconst dashboardSlice = createSlice({\n    name: \"dashboard\",\n    initialState: {\n        loading: false,\n        dataByInsuranceType: [],\n        dataByVendor: [],\n        dataByAgent: [],\n    },\n    reducers: {\n    },\n    extraReducers: {\n        [fetchDataByInsuranceType.pending]: (state, action) => {\n            state.loading = true;\n        },\n        [fetchDataByInsuranceType.fulfilled]: (state, action) => {\n            state.loading = false;\n            if (action.payload.status == 200) {\n                console.log(action.payload);\n                state.dataByInsuranceType = [...action.payload.data];\n            }\n\n        },\n        [fetchDataByInsuranceType.rejected]: (state, action) => {\n            state.loading = false;\n        },\n\n        [fetchDataByVendor.pending]: (state, action) => {\n            state.loading = true;\n        },\n        [fetchDataByVendor.fulfilled]: (state, action) => {\n            state.loading = false;\n            if (action.payload.status == 200) {\n                console.log(action.payload);\n                state.dataByVendor = [...action.payload.data];\n            }\n\n        },\n        [fetchDataByVendor.rejected]: (state, action) => {\n            state.loading = false;\n        },\n\n        [fetchDataForAgents.pending]: (state, action) => {\n            state.loading = true;\n        },\n        [fetchDataForAgents.fulfilled]: (state, action) => {\n            state.loading = false;\n            if (action.payload.status == 200) {\n                console.log(action.payload);\n                state.dataByAgent = [...action.payload.data];\n            }\n\n        },\n        [fetchDataForAgents.rejected]: (state, action) => {\n            state.loading = false;\n        },\n    },\n});\n\n// export const { setUserDetailsFromSS, logoutTheUser } = dashboardSlice.actions;\n\nexport default dashboardSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const fetchInsurancePolicyTypes = createAsyncThunk(\"insuranceTypeVendor/fetchInsurancePolicyTypes\", async () => {\n    try {\n        const response = await axios.get(`https://gjkl2w4at2.execute-api.us-east-2.amazonaws.com/dev/policytypes`);\n        if (response.status > 299) {\n            console.log('fetchInsurancePolicyTypes api response:- ', response)\n            let obj = {\n                status: 500, data: response.data\n            }\n            return obj;\n        } else {\n            console.log('fetchInsurancePolicyTypes api response:- ', response)\n            let obj = {\n                status: 200, data: response.data\n            }\n            return obj;\n        }\n\n\n    } catch (err) {\n        console.log(err.response.data);\n        let obj = {\n            status: 500, ...err.response.data\n        }\n        return obj;\n    }\n});\n\n\n\n\nconst insuranceTypeVendorSlice = createSlice({\n    name: \"insuranceTypeVendor\",\n    initialState: {\n        loading: false,\n        insuranceType: [],\n    },\n    reducers: {\n    },\n    extraReducers: {\n        [fetchInsurancePolicyTypes.pending]: (state, action) => {\n            state.loading = true;\n        },\n        [fetchInsurancePolicyTypes.fulfilled]: (state, action) => {\n            state.loading = false;\n            if (action.payload.status == 200) {\n                console.log(action.payload);\n                state.insuranceType = [...action.payload.data];\n            }\n\n        },\n        [fetchInsurancePolicyTypes.rejected]: (state, action) => {\n            state.loading = false;\n        },\n    },\n});\n\n// export const { setUserDetailsFromSS, logoutTheUser } = insuranceTypeVendorSlice.actions;\n\nexport default insuranceTypeVendorSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport commonReducer from './reducers/CommonReducer';\nimport agentReducer from './reducers/AgentReducer';\nimport dashboardReducer from './reducers/DashboardReducer';\nimport insuranceTypeVendorReducer from './reducers/InsuranceTypeVendorReducer';\nexport default configureStore({\n  reducer: {\n    common: commonReducer,\n    agent: agentReducer,\n    dashboard: dashboardReducer,\n    insuranceTypeVendor: insuranceTypeVendorReducer\n  },\n});\n","import React, { createContext } from 'react';\nimport { CognitoUser, AuthenticationDetails } from 'amazon-cognito-identity-js';\nimport Pool from \"./UserPool\";\nimport store from \"./store\";\nimport {\n    changeLoginState\n  } from \"./reducers/CommonReducer\";\nexport const AccountContext = createContext();\n\nexport const Account = (props) => {\n\n    const getSession = async () => {\n        return await new Promise((resolve, reject) => {\n            const user = Pool.getCurrentUser();\n            if (user) {\n                user.getSession((err, session) => {\n                    if (err) {\n                        reject();\n                    } else {\n                        resolve(session);\n                    }\n                })\n            } else {\n                reject();\n            }\n        })\n    }\n\n    const authenticate = async (Username, Password) => {\n        return await new Promise((resolve, reject) => {\n            const user = new CognitoUser({\n                Username,\n                Pool\n            });\n            const authDetails = new AuthenticationDetails({\n                Username, Password\n            });\n\n            user.authenticateUser(authDetails, {\n                onSuccess: (data) => {\n                    console.log('Login Success ', data);\n                    resolve(data);\n                },\n                onFailure: (err) => {\n                    console.log('Login Failure ', err);\n                    reject(err);\n                },\n                newPasswordRequired: (data) => {\n                    console.log('newPasswordRequired ', data);\n                    resolve(data);\n                }\n            })\n        })\n    }\n\n    const logout = () => {\n        const user = Pool.getCurrentUser();\n        if (user) {\n            user.signOut();\n            store.dispatch(changeLoginState(false));\n        }\n    }\n\n    return (\n        <AccountContext.Provider value={{ authenticate, getSession, logout }}>\n            {props.children}\n        </AccountContext.Provider>\n    )\n};","import React, { useState, useContext } from \"react\";\nimport { AccountContext } from \"../Account\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { Alert } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  changeLoadingState,\n  changeLoginState,\n} from \"../reducers/CommonReducer\";\nfunction Login() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { authenticate } = useContext(AccountContext);\n  const handleEmail = (event) => setEmail(event.target.value);\n  const handlePassword = (event) => setPassword(event.target.value);\n  const [errorToShow, setErrorToShow] = useState(\"\");\n\n  const handleClick = () => {\n    dispatch(changeLoadingState(true));\n    authenticate(email, password)\n      .then((data) => {\n        console.log(\"Log inn !!\", data);\n        setErrorToShow(\"\");\n        dispatch(changeLoadingState(false));\n        dispatch(changeLoginState(true));\n        sessionStorage.setItem(\"accesstoken\", data.accessToken.jwtToken);\n        sessionStorage.setItem(\"idtoken\", data.idToken.jwtToken);\n        sessionStorage.setItem(\"role\", data.idToken.payload[\"custom:role\"]);\n        if (data && data[\"idToken\"][\"payload\"][\"custom:role\"] == \"agent\") {\n          history.push(\"/edit-agent/\" + data[\"idToken\"][\"payload\"][\"email\"]);\n        } else {\n          history.push(\"/admin/dash\");\n        }\n      })\n      .catch((err) => {\n        console.log(\"error\", err);\n        setErrorToShow(err[\"message\"]);\n        dispatch(changeLoadingState(false));\n        dispatch(changeLoginState(false));\n      });\n  };\n\n  return (\n    <>\n      <form>\n        <div className=\"col-md-6 container\">\n          <h3 className=\"text-center\">Log in</h3>\n          <div className=\"form-group\">\n            <label>Email</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              onChange={handleEmail}\n              placeholder=\"Enter the email address\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Enter the password\"\n              onChange={handlePassword}\n            />\n          </div>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary btn-block\"\n            onClick={handleClick}\n          >\n            Login\n          </button>\n          {errorToShow !== \"\" ? (\n            <Alert className=\"mt-2\" variant=\"danger\">\n              {errorToShow}\n            </Alert>\n          ) : (\n            <></>\n          )}\n          {/* <p className=\"mt-2 forgot-password d-flex justify-content-end\">\n            Already registered?\n            <Link className=\"nav-link pt-0 pr-0\" to=\"/\">\n              Login here\n            </Link>\n          </p> */}\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport UserPool from \"../UserPool\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  changeLoadingState\n} from \"../reducers/CommonReducer\";\nfunction SignUp() {\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleEmail = (event) => setEmail(event.target.value);\n  const handlePassword = (event) => setPassword(event.target.value);\n\n  const handleClick = () => {\n    dispatch(changeLoadingState(true));\n    UserPool.signUp(email, password, [{ Name: 'email', Value: email }, { Name: 'custom:role', Value: 'agent' }], null, (err, data) => {\n      if (err) {\n        dispatch(changeLoadingState(false));\n        console.log(err);\n      }\n      dispatch(changeLoadingState(false));\n      console.log(data);\n    });\n    // user.confirmRegistration() for code verification see login component code as well\n  };\n\n  return (\n    <>\n      <form>\n        <div className=\"col-md-6 container\">\n          <h3 className=\"text-center\">Register</h3>\n          <div className=\"form-group\">\n            <label>Email</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              onChange={handleEmail}\n              placeholder=\"Enter the email address\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Enter the password\"\n              onChange={handlePassword}\n            />\n          </div>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary btn-block\"\n            onClick={handleClick}\n          >\n            Register\n          </button>\n\n          <p className=\"mt-2 forgot-password d-flex justify-content-end\">\n            Already registered?\n            <Link className=\"nav-link pt-0 pr-0\" to=\"/\">\n              Login here\n            </Link>\n            {/* <a href=\"#\">Login here</a> */}\n          </p>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default SignUp;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { AccountContext } from \"../Account\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nfunction Navbar() {\n  const history = useHistory();\n  const { loginState } = useSelector((state) => state.common);\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n  const { getSession, logout } = useContext(AccountContext);\n\n  useEffect(() => {\n    if (getSession) {\n      getSession()\n        .then((session) => {\n          console.log(\"session \", session);\n          setIsUserLoggedIn(true);\n          sessionStorage.setItem(\"accesstoken\", session.accessToken.jwtToken);\n          sessionStorage.setItem(\"idtoken\", session.idToken.jwtToken);\n          sessionStorage.setItem(\n            \"role\",\n            session.idToken.payload[\"custom:role\"]\n          );\n          if (session && session[\"idToken\"][\"payload\"][\"custom:role\"] == \"agent\") {\n            history.push(\"/edit-agent/\" + session[\"idToken\"][\"payload\"][\"email\"]);\n          } else {\n            history.push(\"/admin/dash\");\n          }\n        })\n        .catch((err) => setIsUserLoggedIn(false));\n    }\n  }, [loginState]);\n\n  const handleLogout = () => {\n    logout();\n  };\n\n  return (\n    <nav\n      className=\"navbar navbar-expand-md navbar-dark\"\n      style={{ backgroundColor: \"#97144d\" }}\n    >\n      <div className=\"container\">\n        <a className=\"navbar-brand\" href=\"/\">\n          <img src={process.env.PUBLIC_URL + \"/logo.png\"} alt=\"\" height=\"40px\" />\n        </a>\n        <div className=\"collapse navbar-collapse\" id=\"navbarToggleDemo2\">\n          {isUserLoggedIn ? (\n            <div className=\"d-flex ml-auto\">\n              <Dropdown className=\"ml-auto\">\n                <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\">\n                  Prateek\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                  {/* <Dropdown.Item href=\"/addresses\">\n                    Manage Addresses\n                  </Dropdown.Item> */}\n                  <Dropdown.Item onClick={handleLogout} href=\"/\">\n                    Logout\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n          ) : (\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link lightBoldFont\" to=\"/sign-in\">\n                  Log In\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link lightBoldFont\" to=\"/sign-up\">\n                  Sign up\n                </Link>\n              </li>\n            </ul>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import \"./EditAgent.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Form, Row, Col, Button, InputGroup, Image } from \"react-bootstrap\";\nimport { getAgentByEmail, editAgent } from \"../../reducers/AgentReducer\";\nfunction EditAgent() {\n  let { email } = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAgentByEmail(email));\n  }, [email]);\n  const { agentByEmail, loading } = useSelector((state) => state.agent);\n  const [userId, setUserId] = useState(\"\");\n  const [email1, setEmail1] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [dob, setDob] = useState(null);\n  const [crmId, setCrmId] = useState(\"\");\n  const [teleCallingId, setTeleCallingId] = useState(\"\");\n  const [licenseUrnNo, setLicenseUrnNo] = useState(\"\");\n  const [licenseIssueDate, setLicenseIssueDate] = useState(null);\n  const [licenseExpiryDate, setLicenseExpiryDate] = useState(null);\n\n  const [isEditable, setisEditable] = useState(false);\n  useEffect(() => {\n    if (!loading && agentByEmail && Object.keys(agentByEmail).length > 0) {\n      setUserId(agentByEmail.userId);\n      setEmail1(agentByEmail.email);\n      setName(agentByEmail.name);\n      setAddress(agentByEmail.address);\n      console.log(\n        \"dob:- \" + agentByEmail.dob + \" === \" + agentByEmail.dob\n          ? new Date(agentByEmail.dob)\n          : agentByEmail.dob\n      );\n      setDob(agentByEmail.dob ? new Date(agentByEmail.dob) : agentByEmail.dob);\n      setCrmId(agentByEmail.crmId);\n      setTeleCallingId(agentByEmail.teleCallingId);\n      setLicenseUrnNo(agentByEmail.licenseUrnNo);\n      setLicenseIssueDate(\n        agentByEmail.licenseIssueDate\n          ? new Date(agentByEmail.licenseIssueDate)\n          : agentByEmail.licenseIssueDate\n      );\n      setLicenseExpiryDate(\n        agentByEmail.licenseExpiryDate\n          ? new Date(agentByEmail.licenseExpiryDate)\n          : agentByEmail.licenseExpiryDate\n      );\n    }\n  }, [loading]);\n\n  const handleEditSubmitClicked = () => {\n    if (agentByEmail && agentByEmail[\"email\"] && email1) {\n      let obj = {\n        email: email1,\n        name,\n        address,\n        dob: dob ? dob.valueOf() : null,\n        crmId,\n        teleCallingId,\n        licenseUrnNo,\n        licenseIssueDate: licenseIssueDate ? licenseIssueDate.valueOf() : null,\n        licenseExpiryDate: licenseExpiryDate\n          ? licenseExpiryDate.valueOf()\n          : null,\n      };\n      console.log(obj);\n      dispatch(editAgent(obj));\n    }\n  };\n\n  return (\n    <div className=\"p-3\">\n      <div className=\"d-flex justify-content-end pr-4 mb-3\">\n        <FontAwesomeIcon\n          className=\"cursor-pointer\"\n          icon={faPencilAlt}\n          onClick={() => setisEditable(true)}\n        />\n      </div>\n      <Form>\n        <Form.Group as={Row} controlId=\"exampleForm.ControlInput1\">\n          <Form.Label column sm={2}>\n            Email\n          </Form.Label>\n          <Col sm={10} className=\"pr-5\">\n            <Form.Control\n              required\n              disabled={true}\n              type=\"text\"\n              value={email1}\n              placeholder=\"Enter the email\"\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId=\"exampleForm.ControlInput2\">\n          <Form.Label column sm={2}>\n            Name\n          </Form.Label>\n          <Col sm={10} className=\"pr-5\">\n            <Form.Control\n              disabled={!isEditable}\n              required\n              type=\"text\"\n              value={name}\n              onChange={(event) => setName(event.target.value)}\n              placeholder=\"Enter the name\"\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId=\"exampleForm.ControlInput3\">\n          <Form.Label column sm={2}>\n            DOB\n          </Form.Label>\n          <Col sm={10} className=\"pr-5\">\n            <Form.Control\n              disabled={!isEditable}\n              required\n              value={dob == null ? null : dob.toISOString().split(\"T\")[0]}\n              onChange={(event) => setDob(new Date(event.target.value))}\n              type=\"date\"\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId=\"exampleForm.ControlInput4\">\n          <Form.Label column sm={2}>\n            CRM Id\n          </Form.Label>\n          <Col sm={10} className=\"pr-5\">\n            <Form.Control\n              disabled={!isEditable}\n              value={crmId}\n              onChange={(event) => setCrmId(event.target.value)}\n              required\n              type=\"text\"\n              placeholder=\"Enter the CRM-ID\"\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId=\"exampleForm.ControlInput5\">\n          <Form.Label column sm={2}>\n            Telecalling ID\n          </Form.Label>\n          <Col sm={10} className=\"pr-5\">\n            <Form.Control\n              disabled={!isEditable}\n              value={teleCallingId}\n              onChange={(event) => setTeleCallingId(event.target.value)}\n              required\n              type=\"text\"\n              placeholder=\"Enter the Telecalling-ID\"\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId=\"exampleForm.ControlInput6\">\n          <Form.Label column sm={2}>\n            Address\n          </Form.Label>\n          <Col sm={10} className=\"pr-5\">\n            <Form.Control\n              disabled={!isEditable}\n              value={address}\n              onChange={(event) => setAddress(event.target.value)}\n              required\n              type=\"text\"\n              placeholder=\"Enter the address\"\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId=\"exampleForm.ControlInput7\">\n          <Form.Label column sm={2}>\n            License URN no.\n          </Form.Label>\n          <Col sm={10} className=\"pr-5\">\n            <Form.Control\n              disabled={!isEditable}\n              value={licenseUrnNo}\n              onChange={(event) => setLicenseUrnNo(event.target.value)}\n              required\n              type=\"text\"\n              placeholder=\"Enter the license URN no\"\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId=\"exampleForm.ControlInput8\">\n          <Form.Label column sm={2}>\n            License Issue Date\n          </Form.Label>\n          <Col sm={10} className=\"pr-5\">\n            <Form.Control\n              disabled={!isEditable}\n              value={\n                licenseIssueDate == null\n                  ? null\n                  : licenseIssueDate.toISOString().split(\"T\")[0]\n              }\n              onChange={(event) =>\n                setLicenseIssueDate(new Date(event.target.value))\n              }\n              required\n              type=\"date\"\n              placeholder=\"Enter the license issue date\"\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId=\"exampleForm.ControlInput9\">\n          <Form.Label column sm={2}>\n            License Expiry Date\n          </Form.Label>\n          <Col sm={10} className=\"pr-5\">\n            <Form.Control\n              disabled={!isEditable}\n              value={\n                licenseExpiryDate == null\n                  ? null\n                  : licenseExpiryDate.toISOString().split(\"T\")[0]\n              }\n              onChange={(event) =>\n                setLicenseExpiryDate(new Date(event.target.value))\n              }\n              required\n              type=\"date\"\n              placeholder=\"Enter the license expiry date\"\n            />\n          </Col>\n        </Form.Group>\n\n        <div className=\"w-100 textEnd pr-4\">\n          <Button disabled={!isEditable} variant=\"primary\" type=\"button\" onClick={handleEditSubmitClicked}>\n            Submit\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n}\n\nexport default EditAgent;\n","import './AdminSidebar.css';\nimport { useHistory } from \"react-router-dom\";\n\nfunction AdminSidebar() {\n  const history = useHistory();\n  const handleClick = (url) => {\n    if(url == \"dash\") {\n      history.push(\"/admin/dash\");\n    }else if(url == \"agents\") {\n      history.push(\"/admin/agents\");\n    }\n  }\n  return (\n    <ul className=\"nav flex-column mt-3\">\n      {/* <li className=\"nav-item p-2 sidebarTitle\">\n        <div className=\"nav-link p-0 sidebarTitle\">Utitilities</div>\n      </li> */}\n      <li className=\"nav-item p-2\">\n        <div className=\"m-0 p-0 sidebarLink\">\n          <div className=\"nav-link p-0 sidebarNameStyle\" onClick={() => handleClick(\"dash\")}>\n            Dashboard\n          </div>\n        </div>\n      </li>\n      <li className=\"nav-item p-2\">\n        <div className=\"m-0 p-0 sidebarLink\">\n          <div className=\"nav-link p-0 sidebarNameStyle\" onClick={() => handleClick(\"agents\")}>Agents List</div>\n        </div>\n      </li>\n    </ul>\n  );\n}\n\nexport default AdminSidebar;\n","import \"./GraphInsuranceType.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Chart,\n  ChartLegend,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartTitle,\n} from \"@progress/kendo-react-charts\";\nimport \"hammerjs\";\n\nimport { fetchDataByInsuranceType } from \"../../../reducers/DashboardReducer\";\nfunction GraphInsuranceType() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { loading, dataByInsuranceType } = useSelector(\n    (state) => state.dashboard\n  );\n  const [dataByInsuranceType1, setDataByInsuranceType1] = useState([]);\n  useEffect(() => {\n    dispatch(fetchDataByInsuranceType());\n  }, []);\n\n  useEffect(() => {\n    if (!loading && dataByInsuranceType) {\n      setDataByInsuranceType1(dataByInsuranceType);\n    }\n  }, [loading, dataByInsuranceType]);\n\n  return (\n    <div className=\"col-md-12 p-0 pt-3\">\n      <Chart>\n        <ChartTitle text=\"Count of insurance sold, distributed by insurance type\" />\n        <ChartLegend position=\"bottom\" />\n        <ChartSeries>\n          <ChartSeriesItem\n            type=\"pie\"\n            data={dataByInsuranceType1}\n            field=\"totalCount\"\n            categoryField=\"insuranceTypeName\"\n            labels={{\n              visible: true,\n              content: (props) => {\n                return `${props.dataItem.insuranceTypeName} : ${props.dataItem.totalCount}`;\n              },\n            }}\n          />\n        </ChartSeries>\n      </Chart>\n    </div>\n  );\n}\n\nexport default GraphInsuranceType;\n","import \"./GraphVendor.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, Row, Col, Button, InputGroup } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Chart,\n  ChartLegend,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartTitle,\n} from \"@progress/kendo-react-charts\";\nimport \"hammerjs\";\n\nimport { fetchDataByVendor } from \"../../../reducers/DashboardReducer\";\nimport { fetchInsurancePolicyTypes } from \"../../../reducers/InsuranceTypeVendorReducer\";\nfunction GraphVendor() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { loading, dataByVendor } = useSelector((state) => state.dashboard);\n  const insuranceTypeVendor = useSelector((state) => state.insuranceTypeVendor);\n  const [dataByVendor1, setDataByVendor1] = useState([]);\n  const [insuranceTypeId, setInsuranceTypeId] = useState(\"\");\n  useEffect(() => {\n    dispatch(fetchInsurancePolicyTypes());\n  }, []);\n\n  useEffect(() => {\n    if (!loading && dataByVendor) {\n      setDataByVendor1(dataByVendor);\n    }\n  }, [loading, dataByVendor]);\n\n  const handleChangeInsuranceType = (id) => {\n    if (id && id != \"\") {\n      dispatch(fetchDataByVendor(id));\n    }\n  };\n\n  return (\n    <div className=\"col-md-12 p-0 pt-3\">\n      <Chart>\n        <ChartTitle text=\"Count of insurance sold, distributed by vendors\" />\n        <ChartLegend position=\"bottom\" />\n        <ChartSeries>\n          <ChartSeriesItem\n            type=\"pie\"\n            data={dataByVendor1}\n            field=\"totalCount\"\n            tooltip={{\n              visible: true\n            }}\n            categoryField=\"vendorName\"\n            labels={{\n              visible: true,\n              content: (props) => {\n                return `${props.dataItem.vendorName} : ${props.dataItem.totalCount}`;\n              },\n            }}\n          />\n        </ChartSeries>\n      </Chart>\n      <Form>\n        <Form.Group as={Row} controlId=\"exampleForm.ControlSelect1\">\n          <Form.Label column sm={2}>\n            Insurance Type\n          </Form.Label>\n          <Col sm={10} className=\"pr-5\">\n            <Form.Control\n              required\n              as=\"select\"\n              onChange={(event) =>\n                handleChangeInsuranceType(event.target.value)\n              }\n            >\n              <option value={null}>Please select insurance type</option>\n              {insuranceTypeVendor &&\n                insuranceTypeVendor.insuranceType &&\n                insuranceTypeVendor.insuranceType.map((item) => (\n                  <option\n                    value={item.insuranceTypeId}\n                    key={item.insuranceTypeId}\n                  >\n                    {item.insuranceTypeName}\n                  </option>\n                ))}\n            </Form.Control>\n          </Col>\n        </Form.Group>\n      </Form>\n    </div>\n  );\n}\n\nexport default GraphVendor;\n","import \"./GraphAgent.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, Row, Col, Button, InputGroup } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Chart,\n  ChartLegend,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartTitle,\n} from \"@progress/kendo-react-charts\";\nimport \"hammerjs\";\n\nimport { fetchDataForAgents } from \"../../../reducers/DashboardReducer\";\nimport { fetchInsurancePolicyTypes } from \"../../../reducers/InsuranceTypeVendorReducer\";\nfunction GraphAgent() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { loading, dataByAgent } = useSelector((state) => state.dashboard);\n  const insuranceTypeVendor = useSelector((state) => state.insuranceTypeVendor);\n  const [dataByAgent1, setDataByAgent1] = useState([]);\n  const [insuranceType, setInsuranceType] = useState({});\n  const [vendorId, setVendorId] = useState(\"\");\n  useEffect(() => {\n    dispatch(fetchInsurancePolicyTypes());\n  }, []);\n\n  useEffect(() => {\n    if (!loading && dataByAgent) {\n      setDataByAgent1(dataByAgent);\n    }\n  }, [loading, dataByAgent]);\n\n  const handleChangeInsuranceType = (data) => {\n    if (data == \"null\") {\n      dispatch(fetchDataForAgents(null));\n    } else {\n      let insuranceTypeObj = JSON.parse(data);\n      if (insuranceTypeObj && insuranceTypeObj.insuranceTypeId != \"\") {\n        let obj = { insuranceTypeId: insuranceTypeObj.insuranceTypeId };\n        setInsuranceType(insuranceTypeObj);\n        dispatch(fetchDataForAgents(obj));\n      }\n    }\n  };\n\n  const handleChangeVendor = (id) => {\n    if (id && id != \"\") {\n      let obj = {\n        insuranceTypeId: insuranceType.insuranceTypeId,\n        vendorId: id,\n      };\n      setVendorId(id);\n      dispatch(fetchDataForAgents(obj));\n    }\n  };\n\n  return (\n    <div className=\"col-md-12 d-flex m-0 p-0\">\n      <div className=\"col-md-6\">\n        <Form>\n          <Form.Group as={Row} controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label column sm={2}>\n              Insurance Type\n            </Form.Label>\n            <Col sm={10} className=\"pr-5\">\n              <Form.Control\n                required\n                as=\"select\"\n                onChange={(event) =>\n                  handleChangeInsuranceType(event.target.value)\n                }\n              >\n                <option value={\"null\"}>Please select insurance type</option>\n                {insuranceTypeVendor &&\n                  insuranceTypeVendor.insuranceType &&\n                  insuranceTypeVendor.insuranceType.map((item) => (\n                    <option\n                      value={JSON.stringify(item)}\n                      key={item.insuranceTypeId}\n                    >\n                      {item.insuranceTypeName}\n                    </option>\n                  ))}\n              </Form.Control>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"exampleForm.ControlSelect2\">\n            <Form.Label column sm={2}>\n              Vendor\n            </Form.Label>\n            <Col sm={10} className=\"pr-5\">\n              <Form.Control\n                required\n                as=\"select\"\n                onChange={(event) => handleChangeVendor(event.target.value)}\n              >\n                <option value={null}>Please select insurance type</option>\n                {insuranceType &&\n                  insuranceType.listOfVendors &&\n                  insuranceType.listOfVendors.map((item) => (\n                    <option value={item.vendorId} key={item.vendorId}>\n                      {item.vendorName}\n                    </option>\n                  ))}\n              </Form.Control>\n            </Col>\n          </Form.Group>\n        </Form>\n      </div>\n      <div className=\"col-md-6\">\n        <Chart>\n          <ChartTitle text=\"Count of insurance sold, distributed by agents \" />\n          <ChartLegend position=\"bottom\" />\n          <ChartSeries>\n            <ChartSeriesItem\n              type=\"pie\"\n              data={dataByAgent1}\n              field=\"totalCount\"\n              categoryField=\"agentName\"\n              labels={{\n                visible: true,\n                content: (props) => {\n                  return `Count : ${props.dataItem.totalCount}`;\n                },\n              }}\n            />\n          </ChartSeries>\n        </Chart>\n      </div>\n    </div>\n  );\n}\n\nexport default GraphAgent;\n","import \"./AdminDashboard.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport GraphInsuranceType from \"./GraphInsuranceType/GraphInsuranceType\";\nimport GraphVendor from \"./GraphVendor/GraphVendor\";\nimport GraphAgent from \"./GraphAgent/GraphAgent\";\n\nfunction AdminDashboard() {\n  return (\n    <div className=\"p-0 m-0\">\n      <div className=\"col-md-12 d-flex p-0 m-0 pt-3\">\n        <div className=\"col-md-6\">\n          <GraphInsuranceType />\n        </div>\n        <div className=\"col-md-6\">\n          <GraphVendor />\n        </div>\n      </div>\n      <hr />\n      <div className=\"col-md-12 p-0\">\n        <GraphAgent />\n      </div>\n    </div>\n  );\n}\n\nexport default AdminDashboard;\n","import \"./AddAgent.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, Row, Col, Button, Spinner, Image } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { addNewAgent } from \"../../reducers/AgentReducer\";\nfunction AddAgent() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state) => state.agent);\n  const [userId, setUserId] = useState(\"\");\n  const [email1, setEmail1] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [dob, setDob] = useState(null);\n  const [crmId, setCrmId] = useState(\"\");\n  const [teleCallingId, setTeleCallingId] = useState(\"\");\n  const [licenseUrnNo, setLicenseUrnNo] = useState(\"\");\n  const [licenseIssueDate, setLicenseIssueDate] = useState(null);\n  const [licenseExpiryDate, setLicenseExpiryDate] = useState(null);\n  const [isSubmitButtonClicked, setIsSubmitButtonClicked] = useState(false);\n\n  const handleEditSubmitClicked = () => {\n    if (email1) {\n      let obj = {\n        email: email1,\n        name,\n        address,\n        dob: dob ? dob.valueOf() : null,\n        crmId,\n        teleCallingId,\n        licenseUrnNo,\n        licenseIssueDate: licenseIssueDate ? licenseIssueDate.valueOf() : null,\n        licenseExpiryDate: licenseExpiryDate\n          ? licenseExpiryDate.valueOf()\n          : null,\n      };\n      console.log(obj);\n      setIsSubmitButtonClicked(true);\n      dispatch(addNewAgent(obj));\n    }\n  };\n\n  // useEffect(() => {\n  //   if (!loading && isSubmitButtonClicked) {\n  //     history.push(\"\");\n  //   }\n  // }, [loading]);\n\n  return (\n    <>\n      {!loading ? (\n        <div className=\"p-3\">\n          <h3>Add new Agent</h3>\n          <Form>\n            <Form.Group as={Row} controlId=\"exampleForm.ControlInput1\">\n              <Form.Label column sm={2}>\n                Email\n              </Form.Label>\n              <Col sm={10} className=\"pr-5\">\n                <Form.Control\n                  required\n                  type=\"text\"\n                  value={email1}\n                  onChange={(event) => setEmail1(event.target.value)}\n                  placeholder=\"Enter the email\"\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"exampleForm.ControlInput2\">\n              <Form.Label column sm={2}>\n                Name\n              </Form.Label>\n              <Col sm={10} className=\"pr-5\">\n                <Form.Control\n                  required\n                  type=\"text\"\n                  value={name}\n                  onChange={(event) => setName(event.target.value)}\n                  placeholder=\"Enter the name\"\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"exampleForm.ControlInput3\">\n              <Form.Label column sm={2}>\n                DOB\n              </Form.Label>\n              <Col sm={10} className=\"pr-5\">\n                <Form.Control\n                  required\n                  value={dob == null ? null : dob.toISOString().split(\"T\")[0]}\n                  onChange={(event) => setDob(new Date(event.target.value))}\n                  type=\"date\"\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"exampleForm.ControlInput4\">\n              <Form.Label column sm={2}>\n                CRM Id\n              </Form.Label>\n              <Col sm={10} className=\"pr-5\">\n                <Form.Control\n                  value={crmId}\n                  onChange={(event) => setCrmId(event.target.value)}\n                  required\n                  type=\"text\"\n                  placeholder=\"Enter the CRM-ID\"\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"exampleForm.ControlInput5\">\n              <Form.Label column sm={2}>\n                Telecalling ID\n              </Form.Label>\n              <Col sm={10} className=\"pr-5\">\n                <Form.Control\n                  value={teleCallingId}\n                  onChange={(event) => setTeleCallingId(event.target.value)}\n                  required\n                  type=\"text\"\n                  placeholder=\"Enter the Telecalling-ID\"\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"exampleForm.ControlInput6\">\n              <Form.Label column sm={2}>\n                Address\n              </Form.Label>\n              <Col sm={10} className=\"pr-5\">\n                <Form.Control\n                  value={address}\n                  onChange={(event) => setAddress(event.target.value)}\n                  required\n                  type=\"text\"\n                  placeholder=\"Enter the address\"\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"exampleForm.ControlInput7\">\n              <Form.Label column sm={2}>\n                License URN no.\n              </Form.Label>\n              <Col sm={10} className=\"pr-5\">\n                <Form.Control\n                  value={licenseUrnNo}\n                  onChange={(event) => setLicenseUrnNo(event.target.value)}\n                  required\n                  type=\"text\"\n                  placeholder=\"Enter the license URN no\"\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"exampleForm.ControlInput8\">\n              <Form.Label column sm={2}>\n                License Issue Date\n              </Form.Label>\n              <Col sm={10} className=\"pr-5\">\n                <Form.Control\n                  value={\n                    licenseIssueDate == null\n                      ? null\n                      : licenseIssueDate.toISOString().split(\"T\")[0]\n                  }\n                  onChange={(event) =>\n                    setLicenseIssueDate(new Date(event.target.value))\n                  }\n                  required\n                  type=\"date\"\n                  placeholder=\"Enter the license issue date\"\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"exampleForm.ControlInput9\">\n              <Form.Label column sm={2}>\n                License Expiry Date\n              </Form.Label>\n              <Col sm={10} className=\"pr-5\">\n                <Form.Control\n                  value={\n                    licenseExpiryDate == null\n                      ? null\n                      : licenseExpiryDate.toISOString().split(\"T\")[0]\n                  }\n                  onChange={(event) =>\n                    setLicenseExpiryDate(new Date(event.target.value))\n                  }\n                  required\n                  type=\"date\"\n                  placeholder=\"Enter the license expiry date\"\n                />\n              </Col>\n            </Form.Group>\n\n            <div className=\"w-100 textEnd pr-4\">\n              <Button\n                variant=\"outline-danger\"\n                type=\"button\"\n                onClick={handleEditSubmitClicked}\n              >\n                Submit\n              </Button>\n            </div>\n          </Form>\n        </div>\n      ) : (\n        <div className=\"spinnerContainer\">\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </Spinner>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default AddAgent;\n","import \"./AgentList.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Spinner } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { Grid, GridColumn } from \"@progress/kendo-react-grid\";\nimport {\n  getAllAgents,\n  loadAgentsFromHR,\n  deleteAgent,\n  fetchLicenseInformation,\n} from \"../../reducers/AgentReducer\";\nconst DetailComponent = (props) => {\n  const dataItem = props.dataItem;\n  return (\n    <div className=\"col-md-12 d-flex p-0 m-0\">\n      <div className=\"col-md-6 pl-0\">\n        <section>\n          <p>\n            <strong>Date of birth:- </strong>{\" \"}\n            {dataItem.dob\n              ? new Date(dataItem.dob).toDateString().slice(4)\n              : null}\n          </p>\n          <p>\n            <strong>Address:-</strong> {dataItem.address}\n          </p>\n        </section>\n      </div>\n      <div className=\"col-md-6 pl-0\">\n        <section>\n          <p>\n            <strong>License URN:-</strong> {dataItem.licenseUrnNo}\n          </p>\n          <p>\n            <strong>License Expiry Date:-</strong>{\" \"}\n            {dataItem.licenseExpiryDate\n              ? new Date(dataItem.licenseExpiryDate).toDateString().slice(4)\n              : null}\n          </p>\n          <p>\n            <strong>License Issue Date:-</strong>{\" \"}\n            {dataItem.licenseExpiryDate\n              ? new Date(dataItem.licenseIssueDate).toDateString().slice(4)\n              : null}\n          </p>\n        </section>\n      </div>\n    </div>\n  );\n};\nfunction AgentList() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { agentList, loading } = useSelector((state) => state.agent);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    if (agentList && agentList.length > 0) {\n      setData(agentList);\n    }\n  }, [agentList]);\n\n  useEffect(() => {\n    dispatch(getAllAgents());\n  }, []);\n\n  const handleLoadDataFromHr = () => {\n    console.log(\"handleLoadDataFromHr clicked\");\n    dispatch(loadAgentsFromHR());\n  };\n  const updateLicenseInformation = () => {\n    console.log(\"updateLicenseInformation clicked\");\n    dispatch(fetchLicenseInformation());\n  };\n  const deleteAgentButtonHandler = (email) => {\n    console.log(\"delete button clicked for email:- \" + email);\n    dispatch(deleteAgent(email));\n  };\n  const editAgentButtonHandler = (email) => {\n    console.log(\"edit button clicked for email:- \" + email);\n    history.push(`/edit-agent/${email}`);\n  };\n  const expandChange = (event) => {\n    let newData = data.map((item) => {\n      let expanded = item.expanded;\n      if (item.email === event.dataItem.email) {\n        expanded = !event.dataItem.expanded;\n      }\n      return { ...item, expanded };\n    });\n    setData(newData);\n  };\n  const handleAddNewAgentClick = () => {\n    history.push(\"/admin/add-agent\");\n  };\n  return (\n    <>\n      {!loading ? (\n        <div className=\"p-3\">\n          <div\n            className=\"col-md-12 p-0 m-0 mb-2 d-flex\"\n            style={{ justifyContent: \"space-between\" }}\n          >\n            <div>\n              <h4 className=\"m-0\">Agent List</h4>\n            </div>\n            <div>\n              <Button\n                variant=\"primary\"\n                className=\"mr-2\"\n                size=\"sm\"\n                type=\"button\"\n                onClick={handleLoadDataFromHr}\n              >\n                Get Agents from HR\n              </Button>\n              <Button\n                variant=\"primary\"\n                className=\"mr-2\"\n                size=\"sm\"\n                type=\"button\"\n                onClick={updateLicenseInformation}\n              >\n                Update License Information\n              </Button>\n              <Button\n                variant=\"primary\"\n                size=\"sm\"\n                type=\"button\"\n                onClick={handleAddNewAgentClick}\n              >\n                Add new Agent\n              </Button>\n            </div>\n          </div>\n          <Grid\n            detail={DetailComponent}\n            data={data}\n            style={{\n              height: \"500px\",\n              width: \"100%\",\n            }}\n            reorderable={true}\n            resizable={true}\n            rowHeight={40}\n            expandField=\"expanded\"\n            onExpandChange={expandChange}\n          >\n            <GridColumn\n              field=\"name\"\n              title=\"Name\"\n              headerClassName=\"headerClassName1\"\n              width={175}\n            />\n            <GridColumn\n              field=\"email\"\n              title=\"Email\"\n              headerClassName=\"headerClassName1\"\n              width={250}\n            />\n            <GridColumn\n              field=\"crmId\"\n              title=\"CRM ID\"\n              headerClassName=\"headerClassName1\"\n            />\n            <GridColumn\n              field=\"teleCallingId\"\n              title=\"Tele calling Id\"\n              headerClassName=\"headerClassName1\"\n            />\n            <GridColumn\n              field=\"licenseIssueDate\"\n              title=\"License Status\"\n              cell={(props) => {\n                let todaysDate = new Date().valueOf();\n                let lExpiryDate = props.dataItem.licenseExpiryDate\n                  ? props.dataItem.licenseExpiryDate\n                  : null;\n                return (\n                  <td>\n                    {lExpiryDate ? (\n                      lExpiryDate < todaysDate ? (\n                        <div>Ended</div>\n                      ) : (\n                        <div>Active</div>\n                      )\n                    ) : (\n                      <div>N/A</div>\n                    )}\n                  </td>\n                );\n              }}\n              headerClassName=\"headerClassName1\"\n            />\n            <GridColumn\n              title=\"Actions\"\n              cell={(props) => (\n                <td>\n                  {\" \"}\n                  <FontAwesomeIcon\n                    className=\"cursor-pointer mr-3\"\n                    icon={faPencilAlt}\n                    onClick={() => editAgentButtonHandler(props.dataItem.email)}\n                  />\n                  {\"   \"}\n                  <FontAwesomeIcon\n                    className=\"cursor-pointer\"\n                    icon={faTrash}\n                    onClick={() =>\n                      deleteAgentButtonHandler(props.dataItem.email)\n                    }\n                  />\n                </td>\n              )}\n              headerClassName=\"headerClassName1\"\n            />\n          </Grid>\n        </div>\n      ) : (\n        <div className=\"spinnerContainer\">\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </Spinner>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default AgentList;\n","import \"./Admin.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Login from \"../Login/Login\";\nimport AdminSidebar from \"./AdminSidebar/AdminSidebar\";\nimport AdminDashboard from \"./AdminDashboard/AdminDashboard\";\nimport AddAgent from \"./AddAgent/AddAgent\";\nimport AgentList from \"./AgentList/AgentList\";\nimport { useSelector } from \"react-redux\";\nimport { Spinner } from \"react-bootstrap\";\nfunction Admin() {\n  const { loading } = useSelector((state) => state.agent);\n  return (\n    <div>\n      <div className=\"col-md-12 p-0\">\n        <div className=\"d-flex\">\n          <div className=\"col-md-2 p-0\">\n            <AdminSidebar />\n          </div>\n          <hr className=\"verticalLine\" />\n          <div className=\"col-md-10 ml-auto\">\n            <Switch>\n              <Route exact path=\"/admin/dash\" component={AdminDashboard} />\n              <Route exact path=\"/admin/agents\" component={AgentList} />\n              <Route exact path=\"/admin/add-agent\" component={AddAgent} />\n              <Route path=\"/user/signin\" component={Login} />\n            </Switch>\n          </div>\n        </div>\n        {/* <div>\n          <Switch>\n            <Route exact path=\"/admin/dash\" component={AdminDashboard} />\n            <Route exact path=\"/user\" component={AgentList} />\n            <Route path=\"/user/signin\" component={Login} />\n          </Switch>\n        </div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default Admin;\n","import './App.css';\nimport '@progress/kendo-theme-default/dist/all.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './Login/Login';\nimport SignUp from './Signup/Signup';\nimport Navbar from './Navbar/Navbar';\nimport EditAgent from './Agent/EditAgent/EditAgent';\n// import AddSoldPolicy from './Agent/AddSoldPolicy/AddSoldPolicy';\nimport { useSelector } from \"react-redux\";\nimport Admin from './Admin/Admin';\nimport { Account } from './Account';\nimport { Spinner } from \"react-bootstrap\";\n\nfunction App() {\n  const { loading } = useSelector(state => state.common);\n  const agentRedux = useSelector(state => state.agent);\n  return (\n    <Account>\n\n      <div className=\"col-md-12 p-0 m-0\">\n        <Router>\n          <Navbar />\n          {\n            !loading ? (<Switch>\n              <Route exact path=\"/\" component={Login} />\n              <Route exact path=\"/sign-in\" component={Login} />\n              <Route exact path=\"/sign-up\" component={SignUp} />\n              <Route exact path=\"/edit-agent/:email\" component={EditAgent} />\n              {/* <Route exact path=\"/sold-policy\" component={AddSoldPolicy} /> */}\n              <Route path=\"/admin\" component={Admin} />\n            </Switch>) : (<div className=\"spinnerContainer\">\n              <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            </div>)}\n        </Router>\n      </div>\n    </Account>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./store\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}