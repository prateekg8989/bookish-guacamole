{"ast":null,"code":"import _regeneratorRuntime from\"/home/prateek/installation/bfsi/java/case_Study/loginform-cognito/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/prateek/installation/bfsi/java/case_Study/loginform-cognito/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{createContext}from'react';import{CognitoUser,AuthenticationDetails}from'amazon-cognito-identity-js';import Pool from\"./UserPool\";import store from\"./store\";import{changeLoginState}from\"./reducers/CommonReducer\";import{jsx as _jsx}from\"react/jsx-runtime\";export var AccountContext=/*#__PURE__*/createContext();export var Account=function Account(props){var getSession=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return new Promise(function(resolve,reject){var user=Pool.getCurrentUser();if(user){user.getSession(function(err,session){if(err){reject();}else{resolve(session);}});}else{reject();}});case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee);}));return function getSession(){return _ref.apply(this,arguments);};}();var authenticate=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(Username,Password){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return new Promise(function(resolve,reject){var user=new CognitoUser({Username:Username,Pool:Pool});var authDetails=new AuthenticationDetails({Username:Username,Password:Password});user.authenticateUser(authDetails,{onSuccess:function onSuccess(data){console.log('Login Success ',data);resolve(data);},onFailure:function onFailure(err){console.log('Login Failure ',err);reject(err);},newPasswordRequired:function newPasswordRequired(data){console.log('newPasswordRequired ',data);resolve(data);}});});case 2:return _context2.abrupt(\"return\",_context2.sent);case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function authenticate(_x,_x2){return _ref2.apply(this,arguments);};}();var logout=function logout(){var user=Pool.getCurrentUser();if(user){user.signOut();store.dispatch(changeLoginState(false));}};return/*#__PURE__*/_jsx(AccountContext.Provider,{value:{authenticate:authenticate,getSession:getSession,logout:logout},children:props.children});};","map":{"version":3,"sources":["/home/prateek/installation/bfsi/java/case_Study/loginform-cognito/src/Account.js"],"names":["React","createContext","CognitoUser","AuthenticationDetails","Pool","store","changeLoginState","AccountContext","Account","props","getSession","Promise","resolve","reject","user","getCurrentUser","err","session","authenticate","Username","Password","authDetails","authenticateUser","onSuccess","data","console","log","onFailure","newPasswordRequired","logout","signOut","dispatch","children"],"mappings":"6WAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,KAAqC,OAArC,CACA,OAASC,WAAT,CAAsBC,qBAAtB,KAAmD,4BAAnD,CACA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OACIC,gBADJ,KAES,0BAFT,C,2CAGA,MAAO,IAAMC,CAAAA,cAAc,cAAGN,aAAa,EAApC,CAEP,MAAO,IAAMO,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CAE9B,GAAMC,CAAAA,UAAU,0FAAG,yJACF,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CAC1C,GAAMC,CAAAA,IAAI,CAAGV,IAAI,CAACW,cAAL,EAAb,CACA,GAAID,IAAJ,CAAU,CACNA,IAAI,CAACJ,UAAL,CAAgB,SAACM,GAAD,CAAMC,OAAN,CAAkB,CAC9B,GAAID,GAAJ,CAAS,CACLH,MAAM,GACT,CAFD,IAEO,CACHD,OAAO,CAACK,OAAD,CAAP,CACH,CACJ,CAND,EAOH,CARD,IAQO,CACHJ,MAAM,GACT,CACJ,CAbY,CADE,6GAAH,kBAAVH,CAAAA,UAAU,0CAAhB,CAiBA,GAAMQ,CAAAA,YAAY,2FAAG,kBAAOC,QAAP,CAAiBC,QAAjB,6IACJ,IAAIT,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CAC1C,GAAMC,CAAAA,IAAI,CAAG,GAAIZ,CAAAA,WAAJ,CAAgB,CACzBiB,QAAQ,CAARA,QADyB,CAEzBf,IAAI,CAAJA,IAFyB,CAAhB,CAAb,CAIA,GAAMiB,CAAAA,WAAW,CAAG,GAAIlB,CAAAA,qBAAJ,CAA0B,CAC1CgB,QAAQ,CAARA,QAD0C,CAChCC,QAAQ,CAARA,QADgC,CAA1B,CAApB,CAIAN,IAAI,CAACQ,gBAAL,CAAsBD,WAAtB,CAAmC,CAC/BE,SAAS,CAAE,mBAACC,IAAD,CAAU,CACjBC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8BF,IAA9B,EACAZ,OAAO,CAACY,IAAD,CAAP,CACH,CAJ8B,CAK/BG,SAAS,CAAE,mBAACX,GAAD,CAAS,CAChBS,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8BV,GAA9B,EACAH,MAAM,CAACG,GAAD,CAAN,CACH,CAR8B,CAS/BY,mBAAmB,CAAE,6BAACJ,IAAD,CAAU,CAC3BC,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAoCF,IAApC,EACAZ,OAAO,CAACY,IAAD,CAAP,CACH,CAZ8B,CAAnC,EAcH,CAvBY,CADI,iHAAH,kBAAZN,CAAAA,YAAY,iDAAlB,CA2BA,GAAMW,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjB,GAAMf,CAAAA,IAAI,CAAGV,IAAI,CAACW,cAAL,EAAb,CACA,GAAID,IAAJ,CAAU,CACNA,IAAI,CAACgB,OAAL,GACAzB,KAAK,CAAC0B,QAAN,CAAezB,gBAAgB,CAAC,KAAD,CAA/B,EACH,CACJ,CAND,CAQA,mBACI,KAAC,cAAD,CAAgB,QAAhB,EAAyB,KAAK,CAAE,CAAEY,YAAY,CAAZA,YAAF,CAAgBR,UAAU,CAAVA,UAAhB,CAA4BmB,MAAM,CAANA,MAA5B,CAAhC,UACKpB,KAAK,CAACuB,QADX,EADJ,CAKH,CA3DM","sourcesContent":["import React, { createContext } from 'react';\nimport { CognitoUser, AuthenticationDetails } from 'amazon-cognito-identity-js';\nimport Pool from \"./UserPool\";\nimport store from \"./store\";\nimport {\n    changeLoginState\n  } from \"./reducers/CommonReducer\";\nexport const AccountContext = createContext();\n\nexport const Account = (props) => {\n\n    const getSession = async () => {\n        return await new Promise((resolve, reject) => {\n            const user = Pool.getCurrentUser();\n            if (user) {\n                user.getSession((err, session) => {\n                    if (err) {\n                        reject();\n                    } else {\n                        resolve(session);\n                    }\n                })\n            } else {\n                reject();\n            }\n        })\n    }\n\n    const authenticate = async (Username, Password) => {\n        return await new Promise((resolve, reject) => {\n            const user = new CognitoUser({\n                Username,\n                Pool\n            });\n            const authDetails = new AuthenticationDetails({\n                Username, Password\n            });\n\n            user.authenticateUser(authDetails, {\n                onSuccess: (data) => {\n                    console.log('Login Success ', data);\n                    resolve(data);\n                },\n                onFailure: (err) => {\n                    console.log('Login Failure ', err);\n                    reject(err);\n                },\n                newPasswordRequired: (data) => {\n                    console.log('newPasswordRequired ', data);\n                    resolve(data);\n                }\n            })\n        })\n    }\n\n    const logout = () => {\n        const user = Pool.getCurrentUser();\n        if (user) {\n            user.signOut();\n            store.dispatch(changeLoginState(false));\n        }\n    }\n\n    return (\n        <AccountContext.Provider value={{ authenticate, getSession, logout }}>\n            {props.children}\n        </AccountContext.Provider>\n    )\n};"]},"metadata":{},"sourceType":"module"}