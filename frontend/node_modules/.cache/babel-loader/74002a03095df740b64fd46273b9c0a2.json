{"ast":null,"code":"import _slicedToArray from\"/home/prateek/installation/bfsi/java/case_Study/loginform-cognito/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from\"react\";import{AccountContext}from\"../Account\";import{Dropdown}from\"react-bootstrap\";import{Link}from\"react-router-dom\";import{useSelector}from\"react-redux\";import{useHistory}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Navbar(){var history=useHistory();var _useSelector=useSelector(function(state){return state.common;}),loginState=_useSelector.loginState;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isUserLoggedIn=_useState2[0],setIsUserLoggedIn=_useState2[1];var _useContext=useContext(AccountContext),getSession=_useContext.getSession,logout=_useContext.logout;useEffect(function(){if(getSession){getSession().then(function(session){console.log(\"session \",session);setIsUserLoggedIn(true);sessionStorage.setItem(\"accesstoken\",session.accessToken.jwtToken);sessionStorage.setItem(\"idtoken\",session.idToken.jwtToken);sessionStorage.setItem(\"role\",session.idToken.payload[\"custom:role\"]);if(session&&session[\"idToken\"][\"payload\"][\"custom:role\"]==\"agent\"){history.push(\"/edit-agent/\"+session[\"idToken\"][\"payload\"][\"email\"]);}else{history.push(\"/admin/dash\");}}).catch(function(err){return setIsUserLoggedIn(false);});}},[loginState]);var handleLogout=function handleLogout(){logout();};return/*#__PURE__*/_jsx(\"nav\",{className:\"navbar navbar-expand-md navbar-dark\",style:{backgroundColor:\"#97144d\"},children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"a\",{className:\"navbar-brand\",href:\"/\",children:/*#__PURE__*/_jsx(\"img\",{src:process.env.PUBLIC_URL+\"/logo.png\",alt:\"\",height:\"40px\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"collapse navbar-collapse\",id:\"navbarToggleDemo2\",children:isUserLoggedIn?/*#__PURE__*/_jsx(\"div\",{className:\"d-flex ml-auto\",children:/*#__PURE__*/_jsxs(Dropdown,{className:\"ml-auto\",children:[/*#__PURE__*/_jsx(Dropdown.Toggle,{variant:\"light\",id:\"dropdown-basic\",children:\"Prateek\"}),/*#__PURE__*/_jsx(Dropdown.Menu,{children:/*#__PURE__*/_jsx(Dropdown.Item,{onClick:handleLogout,href:\"/\",children:\"Logout\"})})]})}):/*#__PURE__*/_jsxs(\"ul\",{className:\"navbar-nav ml-auto\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(Link,{className:\"nav-link lightBoldFont\",to:\"/sign-in\",children:\"Log In\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(Link,{className:\"nav-link lightBoldFont\",to:\"/sign-up\",children:\"Sign up\"})})]})})]})});}export default Navbar;","map":{"version":3,"sources":["/home/prateek/installation/bfsi/java/case_Study/loginform-cognito/src/Navbar/Navbar.jsx"],"names":["React","useState","useContext","useEffect","AccountContext","Dropdown","Link","useSelector","useHistory","Navbar","history","state","common","loginState","isUserLoggedIn","setIsUserLoggedIn","getSession","logout","then","session","console","log","sessionStorage","setItem","accessToken","jwtToken","idToken","payload","push","catch","err","handleLogout","backgroundColor","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { AccountContext } from \"../Account\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nfunction Navbar() {\n  const history = useHistory();\n  const { loginState } = useSelector((state) => state.common);\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n  const { getSession, logout } = useContext(AccountContext);\n\n  useEffect(() => {\n    if (getSession) {\n      getSession()\n        .then((session) => {\n          console.log(\"session \", session);\n          setIsUserLoggedIn(true);\n          sessionStorage.setItem(\"accesstoken\", session.accessToken.jwtToken);\n          sessionStorage.setItem(\"idtoken\", session.idToken.jwtToken);\n          sessionStorage.setItem(\n            \"role\",\n            session.idToken.payload[\"custom:role\"]\n          );\n          if (session && session[\"idToken\"][\"payload\"][\"custom:role\"] == \"agent\") {\n            history.push(\"/edit-agent/\" + session[\"idToken\"][\"payload\"][\"email\"]);\n          } else {\n            history.push(\"/admin/dash\");\n          }\n        })\n        .catch((err) => setIsUserLoggedIn(false));\n    }\n  }, [loginState]);\n\n  const handleLogout = () => {\n    logout();\n  };\n\n  return (\n    <nav\n      className=\"navbar navbar-expand-md navbar-dark\"\n      style={{ backgroundColor: \"#97144d\" }}\n    >\n      <div className=\"container\">\n        <a className=\"navbar-brand\" href=\"/\">\n          <img src={process.env.PUBLIC_URL + \"/logo.png\"} alt=\"\" height=\"40px\" />\n        </a>\n        <div className=\"collapse navbar-collapse\" id=\"navbarToggleDemo2\">\n          {isUserLoggedIn ? (\n            <div className=\"d-flex ml-auto\">\n              <Dropdown className=\"ml-auto\">\n                <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\">\n                  Prateek\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                  {/* <Dropdown.Item href=\"/addresses\">\n                    Manage Addresses\n                  </Dropdown.Item> */}\n                  <Dropdown.Item onClick={handleLogout} href=\"/\">\n                    Logout\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n          ) : (\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link lightBoldFont\" to=\"/sign-in\">\n                  Log In\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link lightBoldFont\" to=\"/sign-up\">\n                  Sign up\n                </Link>\n              </li>\n            </ul>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}