{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const getAllAgents = createAsyncThunk(\"agents/getAllAgents\", async () => {\n  try {\n    const response = await axios.get(`https://gjkl2w4at2.execute-api.us-east-2.amazonaws.com/dev/agents`);\n    console.log('get all agent api response:- ', response);\n    let obj = {\n      status: 200,\n      list: response.data\n    };\n    return obj;\n  } catch (err) {\n    console.log(err.response.data);\n    let obj = {\n      status: 500,\n      ...err.response.data\n    };\n    return obj;\n  }\n});\nexport const loadAgentsFromHR = createAsyncThunk(\"agents/loadAgentsFromHR\", async () => {\n  try {\n    const response = await axios.get(`https://gjkl2w4at2.execute-api.us-east-2.amazonaws.com/dev/agents/fetchfromhrms`);\n    console.log('loadAgentsFromHR api response:- ', response);\n    let obj = {\n      status: 200,\n      list: response.data\n    };\n    return obj;\n  } catch (err) {\n    console.log(err.response.data);\n    let obj = {\n      status: 500,\n      ...err.response.data\n    };\n    return obj;\n  }\n});\nconst agentSlice = createSlice({\n  name: \"agent\",\n  initialState: {\n    loading: false,\n    agentList: []\n  },\n  reducers: {},\n  extraReducers: {\n    [getAllAgents.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [getAllAgents.fulfilled]: (state, action) => {\n      if (action.payload.status == 200) {\n        state.loading = false;\n        console.log(action.payload);\n        state.agentList = [...action.payload.list];\n      } else {\n        state.loading = false;\n      }\n    },\n    [getAllAgents.rejected]: (state, action) => {\n      state.loading = false;\n    },\n    [loadAgentsFromHR.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [loadAgentsFromHR.fulfilled]: (state, action) => {\n      state.loading = false;\n    },\n    [loadAgentsFromHR.rejected]: (state, action) => {\n      state.loading = false;\n    }\n  }\n}); // export const { setUserDetailsFromSS, logoutTheUser } = agentSlice.actions;\n\nexport default agentSlice.reducer;","map":{"version":3,"sources":["/home/prateek/installation/bfsi/java/case_Study/loginform-cognito/src/reducers/AgentReducer.js"],"names":["createAsyncThunk","createSlice","axios","getAllAgents","response","get","console","log","obj","status","list","data","err","loadAgentsFromHR","agentSlice","name","initialState","loading","agentList","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const getAllAgents = createAsyncThunk(\"agents/getAllAgents\", async () => {\n    try {\n        const response = await axios.get(`https://gjkl2w4at2.execute-api.us-east-2.amazonaws.com/dev/agents`);\n        console.log('get all agent api response:- ', response)\n        let obj = {\n            status: 200, list: response.data\n        }\n        return obj;\n    } catch (err) {\n        console.log(err.response.data);\n        let obj = {\n            status: 500, ...err.response.data\n        }\n        return obj;\n    }\n});\n\nexport const loadAgentsFromHR = createAsyncThunk(\"agents/loadAgentsFromHR\", async () => {\n    try {\n        const response = await axios.get(`https://gjkl2w4at2.execute-api.us-east-2.amazonaws.com/dev/agents/fetchfromhrms`);\n        console.log('loadAgentsFromHR api response:- ', response)\n        let obj = {\n            status: 200, list: response.data\n        }\n        return obj;\n    } catch (err) {\n        console.log(err.response.data);\n        let obj = {\n            status: 500, ...err.response.data\n        }\n        return obj;\n    }\n});\n\nconst agentSlice = createSlice({\n    name: \"agent\",\n    initialState: {\n        loading: false,\n        agentList: []\n    },\n    reducers: {\n    },\n    extraReducers: {\n        [getAllAgents.pending]: (state, action) => {\n            state.loading = true;\n        },\n        [getAllAgents.fulfilled]: (state, action) => {\n            if (action.payload.status == 200) {\n                state.loading = false;\n                console.log(action.payload);\n                state.agentList = [...action.payload.list];\n            } else {\n                state.loading = false;\n            }\n\n        },\n        [getAllAgents.rejected]: (state, action) => {\n            state.loading = false;\n        },\n\n        [loadAgentsFromHR.pending]: (state, action) => {\n            state.loading = true;\n        },\n        [loadAgentsFromHR.fulfilled]: (state, action) => {\n            state.loading = false;\n        },\n        [loadAgentsFromHR.rejected]: (state, action) => {\n            state.loading = false;\n        },\n    },\n});\n\n// export const { setUserDetailsFromSS, logoutTheUser } = agentSlice.actions;\n\nexport default agentSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}