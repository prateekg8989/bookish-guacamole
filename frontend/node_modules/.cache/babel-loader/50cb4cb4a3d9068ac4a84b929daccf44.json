{"ast":null,"code":"import _slicedToArray from\"/home/prateek/installation/bfsi/java/case_Study/loginform-cognito/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"./GraphInsuranceType.css\";import React,{useEffect,useState}from\"react\";import{faTrash,faPencilAlt}from\"@fortawesome/free-solid-svg-icons\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{useDispatch,useSelector}from\"react-redux\";import{Button}from\"react-bootstrap\";import{useHistory}from\"react-router-dom\";import{Chart,ChartLegend,ChartSeries,ChartSeriesItem,ChartTitle}from\"@progress/kendo-react-charts\";import\"hammerjs\";import{fetchDataByInsuranceType}from\"../../../reducers/DashboardReducer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function GraphInsuranceType(){var history=useHistory();var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.dashboard;}),loading=_useSelector.loading,dataByInsuranceType=_useSelector.dataByInsuranceType;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),dataByInsuranceType1=_useState2[0],setDataByInsuranceType1=_useState2[1];useEffect(function(){dispatch(fetchDataByInsuranceType());},[]);useEffect(function(){if(!loading&&dataByInsuranceType){setDataByInsuranceType1(dataByInsuranceType);}},[loading,dataByInsuranceType]);return/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12 p-0 pt-3\",children:/*#__PURE__*/_jsxs(Chart,{children:[/*#__PURE__*/_jsx(ChartTitle,{text:\"Count of insurance sold, distributed by insurance type\"}),/*#__PURE__*/_jsx(ChartLegend,{position:\"bottom\"}),/*#__PURE__*/_jsx(ChartSeries,{children:/*#__PURE__*/_jsx(ChartSeriesItem,{type:\"pie\",data:dataByInsuranceType1,field:\"totalCount\",categoryField:\"insuranceTypeName\",labels:{visible:true,content:function content(props){return\"\".concat(props.dataItem.insuranceTypeName,\" : \").concat(props.dataItem.totalCount);}}})})]})});}export default GraphInsuranceType;","map":{"version":3,"sources":["/home/prateek/installation/bfsi/java/case_Study/loginform-cognito/src/Admin/AdminDashboard/GraphInsuranceType/GraphInsuranceType.jsx"],"names":["React","useEffect","useState","faTrash","faPencilAlt","FontAwesomeIcon","useDispatch","useSelector","Button","useHistory","Chart","ChartLegend","ChartSeries","ChartSeriesItem","ChartTitle","fetchDataByInsuranceType","GraphInsuranceType","history","dispatch","state","dashboard","loading","dataByInsuranceType","dataByInsuranceType1","setDataByInsuranceType1","visible","content","props","dataItem","insuranceTypeName","totalCount"],"mappings":"wLAAA,MAAO,0BAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,OAAT,CAAkBC,WAAlB,KAAqC,mCAArC,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,MAAT,KAAuB,iBAAvB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OACEC,KADF,CAEEC,WAFF,CAGEC,WAHF,CAIEC,eAJF,CAKEC,UALF,KAMO,8BANP,CAOA,MAAO,UAAP,CAEA,OAASC,wBAAT,KAAyC,oCAAzC,C,wFACA,QAASC,CAAAA,kBAAT,EAA8B,CAC5B,GAAMC,CAAAA,OAAO,CAAGR,UAAU,EAA1B,CACA,GAAMS,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CACA,iBAAyCC,WAAW,CAClD,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACC,SAAjB,EADkD,CAApD,CAAQC,OAAR,cAAQA,OAAR,CAAiBC,mBAAjB,cAAiBA,mBAAjB,CAGA,cAAwDpB,QAAQ,CAAC,EAAD,CAAhE,wCAAOqB,oBAAP,eAA6BC,uBAA7B,eACAvB,SAAS,CAAC,UAAM,CACdiB,QAAQ,CAACH,wBAAwB,EAAzB,CAAR,CACD,CAFQ,CAEN,EAFM,CAAT,CAIAd,SAAS,CAAC,UAAM,CACd,GAAI,CAACoB,OAAD,EAAYC,mBAAhB,CAAqC,CACnCE,uBAAuB,CAACF,mBAAD,CAAvB,CACD,CACF,CAJQ,CAIN,CAACD,OAAD,CAAUC,mBAAV,CAJM,CAAT,CAMA,mBACE,YAAK,SAAS,CAAC,oBAAf,uBACE,MAAC,KAAD,yBACE,KAAC,UAAD,EAAY,IAAI,CAAC,wDAAjB,EADF,cAEE,KAAC,WAAD,EAAa,QAAQ,CAAC,QAAtB,EAFF,cAGE,KAAC,WAAD,wBACE,KAAC,eAAD,EACE,IAAI,CAAC,KADP,CAEE,IAAI,CAAEC,oBAFR,CAGE,KAAK,CAAC,YAHR,CAIE,aAAa,CAAC,mBAJhB,CAKE,MAAM,CAAE,CACNE,OAAO,CAAE,IADH,CAENC,OAAO,CAAE,iBAACC,KAAD,CAAW,CAClB,gBAAUA,KAAK,CAACC,QAAN,CAAeC,iBAAzB,eAAgDF,KAAK,CAACC,QAAN,CAAeE,UAA/D,EACD,CAJK,CALV,EADF,EAHF,GADF,EADF,CAsBD,CAED,cAAed,CAAAA,kBAAf","sourcesContent":["import \"./GraphInsuranceType.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Chart,\n  ChartLegend,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartTitle,\n} from \"@progress/kendo-react-charts\";\nimport \"hammerjs\";\n\nimport { fetchDataByInsuranceType } from \"../../../reducers/DashboardReducer\";\nfunction GraphInsuranceType() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { loading, dataByInsuranceType } = useSelector(\n    (state) => state.dashboard\n  );\n  const [dataByInsuranceType1, setDataByInsuranceType1] = useState([]);\n  useEffect(() => {\n    dispatch(fetchDataByInsuranceType());\n  }, []);\n\n  useEffect(() => {\n    if (!loading && dataByInsuranceType) {\n      setDataByInsuranceType1(dataByInsuranceType);\n    }\n  }, [loading, dataByInsuranceType]);\n\n  return (\n    <div className=\"col-md-12 p-0 pt-3\">\n      <Chart>\n        <ChartTitle text=\"Count of insurance sold, distributed by insurance type\" />\n        <ChartLegend position=\"bottom\" />\n        <ChartSeries>\n          <ChartSeriesItem\n            type=\"pie\"\n            data={dataByInsuranceType1}\n            field=\"totalCount\"\n            categoryField=\"insuranceTypeName\"\n            labels={{\n              visible: true,\n              content: (props) => {\n                return `${props.dataItem.insuranceTypeName} : ${props.dataItem.totalCount}`;\n              },\n            }}\n          />\n        </ChartSeries>\n      </Chart>\n    </div>\n  );\n}\n\nexport default GraphInsuranceType;\n"]},"metadata":{},"sourceType":"module"}