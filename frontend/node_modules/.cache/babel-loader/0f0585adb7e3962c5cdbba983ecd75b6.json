{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchDataByInsuranceType = createAsyncThunk(\"dashboard/fetchDataByInsuranceType\", async () => {\n  try {\n    const response = await axios.get(`https://gjkl2w4at2.execute-api.us-east-2.amazonaws.com/dev/stats/insurance-type`);\n\n    if (response.status > 299) {\n      console.log('fetchDataByInsuranceType api response:- ', response);\n      let obj = {\n        status: 500,\n        data: response.data\n      };\n      return obj;\n    } else {\n      console.log('fetchDataByInsuranceType api response:- ', response);\n      let obj = {\n        status: 200,\n        data: response.data\n      };\n      return obj;\n    }\n  } catch (err) {\n    console.log(err.response.data);\n    let obj = {\n      status: 500,\n      ...err.response.data\n    };\n    return obj;\n  }\n});\nexport const fetchDataByVendor = createAsyncThunk(\"dashboard/fetchDataByVendor\", async insuranceTypeId => {\n  try {\n    const response = await axios.get(`https://gjkl2w4at2.execute-api.us-east-2.amazonaws.com/dev/stats/vendor?insuranceTypeId=${insuranceTypeId}`);\n\n    if (response.status > 299) {\n      console.log('fetchDataByVendor api response:- ', response);\n      let obj = {\n        status: 500,\n        data: response.data\n      };\n      return obj;\n    } else {\n      console.log('fetchDataByVendor api response:- ', response);\n      let obj = {\n        status: 200,\n        data: response.data\n      };\n      return obj;\n    }\n  } catch (err) {\n    console.log(err.response.data);\n    let obj = {\n      status: 500,\n      ...err.response.data\n    };\n    return obj;\n  }\n});\nexport const fetchDataForAgents = createAsyncThunk(\"dashboard/fetchDataForAgents\", async obj => {\n  try {\n    let URL = \"https://gjkl2w4at2.execute-api.us-east-2.amazonaws.com/dev/stats/agent\";\n\n    if (obj && obj['insuranceTypeId']) {\n      URL = URL + \"?insuranceTypeId=\" + obj['insuranceTypeId'];\n    }\n\n    if (obj && obj['vendorId']) {\n      URL = URL + \"vendorId=\" + obj['vendorId'];\n    }\n\n    const response = await axios.get(URL);\n\n    if (response.status > 299) {\n      console.log('fetchDataForAgents api response:- ', response);\n      let obj = {\n        status: 500,\n        data: response.data\n      };\n      return obj;\n    } else {\n      console.log('fetchDataForAgents api response:- ', response);\n      let obj = {\n        status: 200,\n        data: response.data\n      };\n      return obj;\n    }\n  } catch (err) {\n    console.log(err.response.data);\n    let obj = {\n      status: 500,\n      ...err.response.data\n    };\n    return obj;\n  }\n});\nconst dashboardSlice = createSlice({\n  name: \"dashboard\",\n  initialState: {\n    loading: false,\n    dataByInsuranceType: [],\n    dataByVendor: [],\n    dataByAgent: []\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchDataByInsuranceType.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [fetchDataByInsuranceType.fulfilled]: (state, action) => {\n      state.loading = false;\n\n      if (action.payload.status == 200) {\n        console.log(action.payload);\n        state.dataByInsuranceType = [...action.payload.data];\n      }\n    },\n    [fetchDataByInsuranceType.rejected]: (state, action) => {\n      state.loading = false;\n    },\n    [fetchDataByVendor.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [fetchDataByVendor.fulfilled]: (state, action) => {\n      state.loading = false;\n\n      if (action.payload.status == 200) {\n        console.log(action.payload);\n        state.dataByVendor = [...action.payload.data];\n      }\n    },\n    [fetchDataByVendor.rejected]: (state, action) => {\n      state.loading = false;\n    },\n    [fetchDataForAgents.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [fetchDataForAgents.fulfilled]: (state, action) => {\n      state.loading = false;\n\n      if (action.payload.status == 200) {\n        console.log(action.payload);\n        state.dataByAgent = [...action.payload.data];\n      }\n    },\n    [fetchDataForAgents.rejected]: (state, action) => {\n      state.loading = false;\n    }\n  }\n}); // export const { setUserDetailsFromSS, logoutTheUser } = dashboardSlice.actions;\n\nexport default dashboardSlice.reducer;","map":{"version":3,"sources":["/home/prateek/installation/bfsi/java/case_Study/loginform-cognito/src/reducers/DashboardReducer.js"],"names":["createAsyncThunk","createSlice","axios","fetchDataByInsuranceType","response","get","status","console","log","obj","data","err","fetchDataByVendor","insuranceTypeId","fetchDataForAgents","URL","dashboardSlice","name","initialState","loading","dataByInsuranceType","dataByVendor","dataByAgent","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const fetchDataByInsuranceType = createAsyncThunk(\"dashboard/fetchDataByInsuranceType\", async () => {\n    try {\n        const response = await axios.get(`https://gjkl2w4at2.execute-api.us-east-2.amazonaws.com/dev/stats/insurance-type`);\n        if (response.status > 299) {\n            console.log('fetchDataByInsuranceType api response:- ', response)\n            let obj = {\n                status: 500, data: response.data\n            }\n            return obj;\n        } else {\n            console.log('fetchDataByInsuranceType api response:- ', response)\n            let obj = {\n                status: 200, data: response.data\n            }\n            return obj;\n        }\n\n\n    } catch (err) {\n        console.log(err.response.data);\n        let obj = {\n            status: 500, ...err.response.data\n        }\n        return obj;\n    }\n});\n\nexport const fetchDataByVendor = createAsyncThunk(\"dashboard/fetchDataByVendor\", async (insuranceTypeId) => {\n    try {\n        const response = await axios.get(`https://gjkl2w4at2.execute-api.us-east-2.amazonaws.com/dev/stats/vendor?insuranceTypeId=${insuranceTypeId}`);\n        if (response.status > 299) {\n            console.log('fetchDataByVendor api response:- ', response)\n            let obj = {\n                status: 500, data: response.data\n            }\n            return obj;\n        } else {\n            console.log('fetchDataByVendor api response:- ', response)\n            let obj = {\n                status: 200, data: response.data\n            }\n            return obj;\n        }\n\n\n    } catch (err) {\n        console.log(err.response.data);\n        let obj = {\n            status: 500, ...err.response.data\n        }\n        return obj;\n    }\n});\n\n\nexport const fetchDataForAgents = createAsyncThunk(\"dashboard/fetchDataForAgents\", async (obj) => {\n    try {\n        let URL = \"https://gjkl2w4at2.execute-api.us-east-2.amazonaws.com/dev/stats/agent\";\n        if (obj && obj['insuranceTypeId']) {\n            URL = URL + \"?insuranceTypeId=\" + obj['insuranceTypeId'];\n        }\n        if (obj && obj['vendorId']) {\n            URL = URL + \"vendorId=\" + obj['vendorId'];\n        }\n        const response = await axios.get(URL);\n        if (response.status > 299) {\n            console.log('fetchDataForAgents api response:- ', response)\n            let obj = {\n                status: 500, data: response.data\n            }\n            return obj;\n        } else {\n            console.log('fetchDataForAgents api response:- ', response)\n            let obj = {\n                status: 200, data: response.data\n            }\n            return obj;\n        }\n\n\n    } catch (err) {\n        console.log(err.response.data);\n        let obj = {\n            status: 500, ...err.response.data\n        }\n        return obj;\n    }\n});\n\n\n\nconst dashboardSlice = createSlice({\n    name: \"dashboard\",\n    initialState: {\n        loading: false,\n        dataByInsuranceType: [],\n        dataByVendor: [],\n        dataByAgent: [],\n    },\n    reducers: {\n    },\n    extraReducers: {\n        [fetchDataByInsuranceType.pending]: (state, action) => {\n            state.loading = true;\n        },\n        [fetchDataByInsuranceType.fulfilled]: (state, action) => {\n            state.loading = false;\n            if (action.payload.status == 200) {\n                console.log(action.payload);\n                state.dataByInsuranceType = [...action.payload.data];\n            }\n\n        },\n        [fetchDataByInsuranceType.rejected]: (state, action) => {\n            state.loading = false;\n        },\n\n        [fetchDataByVendor.pending]: (state, action) => {\n            state.loading = true;\n        },\n        [fetchDataByVendor.fulfilled]: (state, action) => {\n            state.loading = false;\n            if (action.payload.status == 200) {\n                console.log(action.payload);\n                state.dataByVendor = [...action.payload.data];\n            }\n\n        },\n        [fetchDataByVendor.rejected]: (state, action) => {\n            state.loading = false;\n        },\n\n        [fetchDataForAgents.pending]: (state, action) => {\n            state.loading = true;\n        },\n        [fetchDataForAgents.fulfilled]: (state, action) => {\n            state.loading = false;\n            if (action.payload.status == 200) {\n                console.log(action.payload);\n                state.dataByAgent = [...action.payload.data];\n            }\n\n        },\n        [fetchDataForAgents.rejected]: (state, action) => {\n            state.loading = false;\n        },\n    },\n});\n\n// export const { setUserDetailsFromSS, logoutTheUser } = dashboardSlice.actions;\n\nexport default dashboardSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}