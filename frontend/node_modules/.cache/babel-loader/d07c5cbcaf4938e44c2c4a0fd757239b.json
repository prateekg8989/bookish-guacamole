{"ast":null,"code":"var _jsxFileName = \"/home/prateek/installation/bfsi/java/case_Study/loginform-cognito/src/Navbar/Navbar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { AccountContext } from \"../Account\";\nimport { Dropdown } from 'react-bootstrap';\nimport UserPool from \"../UserPool\";\nimport { CognitoUser, AuthenticationDetails } from \"amazon-cognito-identity-js\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeLoadingState, changeLoginState } from \"../reducers/CommonReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Navbar() {\n  _s();\n\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n  const {\n    getSession,\n    logout\n  } = useContext(AccountContext);\n  useEffect(() => {\n    if (getSession) {\n      getSession().then(session => {\n        console.log(\"session \", session);\n        setIsUserLoggedIn(true);\n      }).catch(err => setIsUserLoggedIn(false));\n    }\n  }, []);\n\n  const handleLogout = () => {\n    logout();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar navbar-expand-md navbar-dark bg-dark\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"navbar-brand\",\n        href: \"#\",\n        children: \"My-App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collapse navbar-collapse\",\n        id: \"navbarToggleDemo2\",\n        children: isUserLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex ml-auto\",\n          children: /*#__PURE__*/_jsxDEV(Dropdown, {\n            className: \"ml-auto\",\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              variant: \"light\",\n              id: \"dropdown-basic\",\n              children: \"Prateek\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              children: /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: handleLogout,\n                href: \"/\",\n                children: \"Logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"navbar-nav ml-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"nav-link lightBoldFont\",\n              to: \"/sign-in\",\n              children: \"Log In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"nav-link lightBoldFont\",\n              to: \"/sign-up\",\n              children: \"Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Navbar, \"gyQ8QJWEEm+YeT5D+NBI44FosiI=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/home/prateek/installation/bfsi/java/case_Study/loginform-cognito/src/Navbar/Navbar.jsx"],"names":["React","useState","useContext","useEffect","AccountContext","Dropdown","UserPool","CognitoUser","AuthenticationDetails","Link","useSelector","useDispatch","changeLoadingState","changeLoginState","Navbar","isUserLoggedIn","setIsUserLoggedIn","getSession","logout","then","session","console","log","catch","err","handleLogout"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { AccountContext } from \"../Account\";\nimport { Dropdown } from 'react-bootstrap';\nimport UserPool from \"../UserPool\";\nimport { CognitoUser, AuthenticationDetails } from \"amazon-cognito-identity-js\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  changeLoadingState,\n  changeLoginState,\n} from \"../reducers/CommonReducer\";\nfunction Navbar() {\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n  const { getSession, logout } = useContext(AccountContext);\n\n  useEffect(() => {\n    if (getSession) {\n      getSession()\n        .then((session) => {\n          console.log(\"session \", session);\n          setIsUserLoggedIn(true);\n        })\n        .catch((err) => setIsUserLoggedIn(false));\n    }\n  }, []);\n\n  const handleLogout = () => {\n    logout();\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n      <div className=\"container\">\n        <a className=\"navbar-brand\" href=\"#\">\n          My-App\n        </a>\n        <div className=\"collapse navbar-collapse\" id=\"navbarToggleDemo2\">\n          {isUserLoggedIn ? (\n            <div className=\"d-flex ml-auto\">\n              <Dropdown className=\"ml-auto\">\n                <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\">\n                  Prateek\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                  {/* <Dropdown.Item href=\"/addresses\">\n                    Manage Addresses\n                  </Dropdown.Item> */}\n                  <Dropdown.Item onClick={handleLogout} href=\"/\">\n                    Logout\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n          ) : (\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link lightBoldFont\" to=\"/sign-in\">\n                  Log In\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link lightBoldFont\" to=\"/sign-up\">\n                  Sign up\n                </Link>\n              </li>\n            </ul>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}