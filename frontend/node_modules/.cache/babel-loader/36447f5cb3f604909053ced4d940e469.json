{"ast":null,"code":"// import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport{createSlice}from\"@reduxjs/toolkit\";// import axios from \"axios\";\nvar commonSlice=createSlice({name:\"common\",initialState:{loading:false,loginState:false},reducers:{changeLoadingState:function changeLoadingState(state,action){state.loading=action.payload;},changeLoginState:function changeLoginState(state,action){state.loginState=action.payload;}},extraReducers:{}});var _commonSlice$actions=commonSlice.actions,changeLoadingState=_commonSlice$actions.changeLoadingState,changeLoginState=_commonSlice$actions.changeLoginState;export{changeLoadingState,changeLoginState};export default commonSlice.reducer;","map":{"version":3,"sources":["/home/prateek/installation/bfsi/java/case_Study/loginform-cognito/src/reducers/CommonReducer.js"],"names":["createSlice","commonSlice","name","initialState","loading","loginState","reducers","changeLoadingState","state","action","payload","changeLoginState","extraReducers","actions","reducer"],"mappings":"AAAA;AACA,OAASA,WAAT,KAA4B,kBAA5B,CACA;AAEA,GAAMC,CAAAA,WAAW,CAAGD,WAAW,CAAC,CAC5BE,IAAI,CAAE,QADsB,CAE5BC,YAAY,CAAE,CACVC,OAAO,CAAE,KADC,CAEVC,UAAU,CAAE,KAFF,CAFc,CAM5BC,QAAQ,CAAE,CACNC,kBADM,6BACaC,KADb,CACoBC,MADpB,CAC4B,CAC9BD,KAAK,CAACJ,OAAN,CAAgBK,MAAM,CAACC,OAAvB,CACH,CAHK,CAINC,gBAJM,2BAIWH,KAJX,CAIkBC,MAJlB,CAI0B,CAC5BD,KAAK,CAACH,UAAN,CAAmBI,MAAM,CAACC,OAA1B,CACH,CANK,CANkB,CAe5BE,aAAa,CAAE,EAfa,CAAD,CAA/B,CAmBO,yBAAiDX,WAAW,CAACY,OAA7D,CAAQN,kBAAR,sBAAQA,kBAAR,CAA4BI,gBAA5B,sBAA4BA,gBAA5B,C,4CAEP,cAAeV,CAAAA,WAAW,CAACa,OAA3B","sourcesContent":["// import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n// import axios from \"axios\";\n\nconst commonSlice = createSlice({\n    name: \"common\",\n    initialState: {\n        loading: false,\n        loginState: false\n    },\n    reducers: {\n        changeLoadingState(state, action) {\n            state.loading = action.payload\n        },\n        changeLoginState(state, action) {\n            state.loginState = action.payload\n        }\n\n    },\n    extraReducers: {\n    },\n});\n\nexport const { changeLoadingState, changeLoginState } = commonSlice.actions;\n\nexport default commonSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}