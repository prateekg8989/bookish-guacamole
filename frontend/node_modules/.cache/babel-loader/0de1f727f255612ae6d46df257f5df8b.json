{"ast":null,"code":"// import \"./AddSoldPolicy.css\";\n// import React, { useEffect, useState } from \"react\";\n// import { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { useParams } from \"react-router-dom\";\n// import { Form, Row, Col, Button, InputGroup, Image } from \"react-bootstrap\";\n// import { getAgentByEmail } from \"../../reducers/AgentReducer\";\n// function AddSoldPolicy() {\n//   const dispatch = useDispatch();\n//   useEffect(() => {\n//     // dispatch(getAgentByEmail(email));\n//   }, []);\n//   const [insuranceTypeId, setInsuranceTypeId] =  useState(\"\");\n//   const [insuranceTypeName, setInsuranceTypeName] =  useState(\"\");\n//   const [vendorId, setVendorId] =  useState(\"\");\n//   const [vendorName, setVendorName] =  useState(\"\");\n//   const [agentId, setAgentId] =  useState(\"\");\n//   const [policyUin, setPolicyUin] =  useState(\"\");\n//   const [policyName, setPolicyName] =  useState(\"\");\n//   const [insuredValue, setInsuredValue] =  useState(\"\");\n//   const [insuranceTypeId, setInsuranceTypeId] =  useState(0);\n//   const [totalAnnualPremium, setTotalAnnualPremium] =  useState(0);\n//   const [policyIssueDate, setPolicyIssueDate] = useState(null);\n//   const [policyEndDate, setPolicyEndDate] = useState(null);\n//   const handleEditSubmitClicked = () => {\n//   };\n//   return (\n//     <div className=\"p-3\">\n//       <Form>\n//         <Form.Group as={Row} controlId=\"exampleForm.ControlInput1\">\n//           <Form.Label column sm={2}>\n//             Email\n//           </Form.Label>\n//           <Col sm={10} className=\"pr-5\">\n//             <Form.Control\n//               required\n//               disabled={true}\n//               type=\"text\"\n//               value={email1}\n//               placeholder=\"Enter the email\"\n//             />\n//           </Col>\n//         </Form.Group>\n//         <Form.Group as={Row} controlId=\"exampleForm.ControlInput2\">\n//           <Form.Label column sm={2}>\n//             Name\n//           </Form.Label>\n//           <Col sm={10} className=\"pr-5\">\n//             <Form.Control\n//               disabled={!isEditable}\n//               required\n//               type=\"text\"\n//               value={name}\n//               onChange={(event) => setName(event.target.value)}\n//               placeholder=\"Enter the name\"\n//             />\n//           </Col>\n//         </Form.Group>\n//         <Form.Group as={Row} controlId=\"exampleForm.ControlInput3\">\n//           <Form.Label column sm={2}>\n//             DOB\n//           </Form.Label>\n//           <Col sm={10} className=\"pr-5\">\n//             <Form.Control\n//               disabled={!isEditable}\n//               required\n//               value={dob == null ? null : dob.toISOString().split(\"T\")[0]}\n//               onChange={(event) => setDob(new Date(event.target.value))}\n//               type=\"date\"\n//             />\n//           </Col>\n//         </Form.Group>\n//         <Form.Group as={Row} controlId=\"exampleForm.ControlInput4\">\n//           <Form.Label column sm={2}>\n//             CRM Id\n//           </Form.Label>\n//           <Col sm={10} className=\"pr-5\">\n//             <Form.Control\n//               disabled={!isEditable}\n//               value={crmId}\n//               onChange={(event) => setCrmId(event.target.value)}\n//               required\n//               type=\"text\"\n//               placeholder=\"Enter the CRM-ID\"\n//             />\n//           </Col>\n//         </Form.Group>\n//         <Form.Group as={Row} controlId=\"exampleForm.ControlInput5\">\n//           <Form.Label column sm={2}>\n//             Telecalling ID\n//           </Form.Label>\n//           <Col sm={10} className=\"pr-5\">\n//             <Form.Control\n//               disabled={!isEditable}\n//               value={teleCallingId}\n//               onChange={(event) => setTeleCallingId(event.target.value)}\n//               required\n//               type=\"text\"\n//               placeholder=\"Enter the Telecalling-ID\"\n//             />\n//           </Col>\n//         </Form.Group>\n//         <Form.Group as={Row} controlId=\"exampleForm.ControlInput6\">\n//           <Form.Label column sm={2}>\n//             Address\n//           </Form.Label>\n//           <Col sm={10} className=\"pr-5\">\n//             <Form.Control\n//               disabled={!isEditable}\n//               value={address}\n//               onChange={(event) => setAddress(event.target.value)}\n//               required\n//               type=\"text\"\n//               placeholder=\"Enter the address\"\n//             />\n//           </Col>\n//         </Form.Group>\n//         <Form.Group as={Row} controlId=\"exampleForm.ControlInput7\">\n//           <Form.Label column sm={2}>\n//             License URN no.\n//           </Form.Label>\n//           <Col sm={10} className=\"pr-5\">\n//             <Form.Control\n//               disabled={!isEditable}\n//               value={licenseUrnNo}\n//               onChange={(event) => setLicenseUrnNo(event.target.value)}\n//               required\n//               type=\"text\"\n//               placeholder=\"Enter the license URN no\"\n//             />\n//           </Col>\n//         </Form.Group>\n//         <Form.Group as={Row} controlId=\"exampleForm.ControlInput8\">\n//           <Form.Label column sm={2}>\n//             License Issue Date\n//           </Form.Label>\n//           <Col sm={10} className=\"pr-5\">\n//             <Form.Control\n//               disabled={!isEditable}\n//               value={\n//                 licenseIssueDate == null\n//                   ? null\n//                   : licenseIssueDate.toISOString().split(\"T\")[0]\n//               }\n//               onChange={(event) =>\n//                 setLicenseIssueDate(new Date(event.target.value))\n//               }\n//               required\n//               type=\"date\"\n//               placeholder=\"Enter the license issue date\"\n//             />\n//           </Col>\n//         </Form.Group>\n//         <Form.Group as={Row} controlId=\"exampleForm.ControlInput9\">\n//           <Form.Label column sm={2}>\n//             License Expiry Date\n//           </Form.Label>\n//           <Col sm={10} className=\"pr-5\">\n//             <Form.Control\n//               disabled={!isEditable}\n//               value={\n//                 licenseExpiryDate == null\n//                   ? null\n//                   : licenseExpiryDate.toISOString().split(\"T\")[0]\n//               }\n//               onChange={(event) =>\n//                 setLicenseExpiryDate(new Date(event.target.value))\n//               }\n//               required\n//               type=\"date\"\n//               placeholder=\"Enter the license expiry date\"\n//             />\n//           </Col>\n//         </Form.Group>\n//         <div className=\"w-100 textEnd pr-4\">\n//           <Button disabled={!isEditable} variant=\"primary\" type=\"button\" onClick={handleEditSubmitClicked}>\n//             Submit\n//           </Button>\n//         </div>\n//       </Form>\n//     </div>\n//   );\n// }\n// export default AddSoldPolicy;","map":{"version":3,"sources":["/home/prateek/installation/bfsi/java/case_Study/loginform-cognito/src/Agent/AddSoldPolicy/AddSoldPolicy.jsx"],"names":[],"mappingssourcesContent":["// import \"./AddSoldPolicy.css\";\n// import React, { useEffect, useState } from \"react\";\n// import { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { useParams } from \"react-router-dom\";\n// import { Form, Row, Col, Button, InputGroup, Image } from \"react-bootstrap\";\n// import { getAgentByEmail } from \"../../reducers/AgentReducer\";\n// function AddSoldPolicy() {\n//   const dispatch = useDispatch();\n//   useEffect(() => {\n//     // dispatch(getAgentByEmail(email));\n//   }, []);\n//   const [insuranceTypeId, setInsuranceTypeId] =  useState(\"\");\n//   const [insuranceTypeName, setInsuranceTypeName] =  useState(\"\");\n//   const [vendorId, setVendorId] =  useState(\"\");\n//   const [vendorName, setVendorName] =  useState(\"\");\n//   const [agentId, setAgentId] =  useState(\"\");\n//   const [policyUin, setPolicyUin] =  useState(\"\");\n//   const [policyName, setPolicyName] =  useState(\"\");\n//   const [insuredValue, setInsuredValue] =  useState(\"\");\n//   const [insuranceTypeId, setInsuranceTypeId] =  useState(0);\n//   const [totalAnnualPremium, setTotalAnnualPremium] =  useState(0);\n//   const [policyIssueDate, setPolicyIssueDate] = useState(null);\n//   const [policyEndDate, setPolicyEndDate] = useState(null);\n\n\n//   const handleEditSubmitClicked = () => {\n    \n//   };\n\n//   return (\n//     <div className=\"p-3\">\n\n//       <Form>\n//         <Form.Group as={Row} controlId=\"exampleForm.ControlInput1\">\n//           <Form.Label column sm={2}>\n//             Email\n//           </Form.Label>\n//           <Col sm={10} className=\"pr-5\">\n//             <Form.Control\n//               required\n//               disabled={true}\n//               type=\"text\"\n//               value={email1}\n//               placeholder=\"Enter the email\"\n//             />\n//           </Col>\n//         </Form.Group>\n//         <Form.Group as={Row} controlId=\"exampleForm.ControlInput2\">\n//           <Form.Label column sm={2}>\n//             Name\n//           </Form.Label>\n//           <Col sm={10} className=\"pr-5\">\n//             <Form.Control\n//               disabled={!isEditable}\n//               required\n//               type=\"text\"\n//               value={name}\n//               onChange={(event) => setName(event.target.value)}\n//               placeholder=\"Enter the name\"\n//             />\n//           </Col>\n//         </Form.Group>\n//         <Form.Group as={Row} controlId=\"exampleForm.ControlInput3\">\n//           <Form.Label column sm={2}>\n//             DOB\n//           </Form.Label>\n//           <Col sm={10} className=\"pr-5\">\n//             <Form.Control\n//               disabled={!isEditable}\n//               required\n//               value={dob == null ? null : dob.toISOString().split(\"T\")[0]}\n//               onChange={(event) => setDob(new Date(event.target.value))}\n//               type=\"date\"\n//             />\n//           </Col>\n//         </Form.Group>\n//         <Form.Group as={Row} controlId=\"exampleForm.ControlInput4\">\n//           <Form.Label column sm={2}>\n//             CRM Id\n//           </Form.Label>\n//           <Col sm={10} className=\"pr-5\">\n//             <Form.Control\n//               disabled={!isEditable}\n//               value={crmId}\n//               onChange={(event) => setCrmId(event.target.value)}\n//               required\n//               type=\"text\"\n//               placeholder=\"Enter the CRM-ID\"\n//             />\n//           </Col>\n//         </Form.Group>\n//         <Form.Group as={Row} controlId=\"exampleForm.ControlInput5\">\n//           <Form.Label column sm={2}>\n//             Telecalling ID\n//           </Form.Label>\n//           <Col sm={10} className=\"pr-5\">\n//             <Form.Control\n//               disabled={!isEditable}\n//               value={teleCallingId}\n//               onChange={(event) => setTeleCallingId(event.target.value)}\n//               required\n//               type=\"text\"\n//               placeholder=\"Enter the Telecalling-ID\"\n//             />\n//           </Col>\n//         </Form.Group>\n//         <Form.Group as={Row} controlId=\"exampleForm.ControlInput6\">\n//           <Form.Label column sm={2}>\n//             Address\n//           </Form.Label>\n//           <Col sm={10} className=\"pr-5\">\n//             <Form.Control\n//               disabled={!isEditable}\n//               value={address}\n//               onChange={(event) => setAddress(event.target.value)}\n//               required\n//               type=\"text\"\n//               placeholder=\"Enter the address\"\n//             />\n//           </Col>\n//         </Form.Group>\n//         <Form.Group as={Row} controlId=\"exampleForm.ControlInput7\">\n//           <Form.Label column sm={2}>\n//             License URN no.\n//           </Form.Label>\n//           <Col sm={10} className=\"pr-5\">\n//             <Form.Control\n//               disabled={!isEditable}\n//               value={licenseUrnNo}\n//               onChange={(event) => setLicenseUrnNo(event.target.value)}\n//               required\n//               type=\"text\"\n//               placeholder=\"Enter the license URN no\"\n//             />\n//           </Col>\n//         </Form.Group>\n//         <Form.Group as={Row} controlId=\"exampleForm.ControlInput8\">\n//           <Form.Label column sm={2}>\n//             License Issue Date\n//           </Form.Label>\n//           <Col sm={10} className=\"pr-5\">\n//             <Form.Control\n//               disabled={!isEditable}\n//               value={\n//                 licenseIssueDate == null\n//                   ? null\n//                   : licenseIssueDate.toISOString().split(\"T\")[0]\n//               }\n//               onChange={(event) =>\n//                 setLicenseIssueDate(new Date(event.target.value))\n//               }\n//               required\n//               type=\"date\"\n//               placeholder=\"Enter the license issue date\"\n//             />\n//           </Col>\n//         </Form.Group>\n//         <Form.Group as={Row} controlId=\"exampleForm.ControlInput9\">\n//           <Form.Label column sm={2}>\n//             License Expiry Date\n//           </Form.Label>\n//           <Col sm={10} className=\"pr-5\">\n//             <Form.Control\n//               disabled={!isEditable}\n//               value={\n//                 licenseExpiryDate == null\n//                   ? null\n//                   : licenseExpiryDate.toISOString().split(\"T\")[0]\n//               }\n//               onChange={(event) =>\n//                 setLicenseExpiryDate(new Date(event.target.value))\n//               }\n//               required\n//               type=\"date\"\n//               placeholder=\"Enter the license expiry date\"\n//             />\n//           </Col>\n//         </Form.Group>\n\n//         <div className=\"w-100 textEnd pr-4\">\n//           <Button disabled={!isEditable} variant=\"primary\" type=\"button\" onClick={handleEditSubmitClicked}>\n//             Submit\n//           </Button>\n//         </div>\n//       </Form>\n//     </div>\n//   );\n// }\n\n// export default AddSoldPolicy;\n"]},"metadata":{},"sourceType":"module"}